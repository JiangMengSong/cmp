<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hfxt.cmp.mapper.IEmployeeLoginDao">
<!-- 新增的方法写在这里 -->


<!-- 保存非空列,返回受影响的行数 -->
	<insert id="saveSelective" useGeneratedKeys="true" keyProperty="Vo.id">
		Insert Into tb_employee_login 
		<trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="Vo.loginName != null">login_name,</if>
            <if test="Vo.loginPass != null">login_pass,</if>
            <if test="Vo.loginSalt != null">login_salt,</if>
            <if test="Vo.enableStatus != null">enable_status,</if>
            <if test="Vo.creatorId != null">creator_id,</if>
             create_time,
            <if test="Vo.updaterId != null">updater_id,</if>
            <if test="Vo.updateTime != null">update_time,</if>
            <if test="Vo.orders != null">orders,</if>
            <if test="Vo.nickName != null">nick_name,</if>
            <if test="Vo.roleId != null">role_id,</if>
            <if test="Vo.employeeId != null">employee_id,</if>
           
		</trim>
		<trim prefix="Values (" suffix=")" suffixOverrides=",">
            <if test="Vo.loginName != null">#{Vo.loginName},</if>
            <if test="Vo.loginPass != null">#{Vo.loginPass},</if>
            <if test="Vo.loginSalt != null">#{Vo.loginSalt},</if>
            <if test="Vo.enableStatus != null">#{Vo.enableStatus},</if>
            <if test="Vo.creatorId != null">#{Vo.creatorId},</if>
            now(),
            <if test="Vo.updaterId != null">#{Vo.updaterId},</if>
            <if test="Vo.updateTime != null">#{Vo.updateTime},</if>
            <if test="Vo.orders != null">#{Vo.orders},</if>
            <if test="Vo.nickName != null">#{Vo.nickName},</if>
            <if test="Vo.roleId != null">#{Vo.roleId},</if>
            <if test="Vo.employeeId != null">#{Vo.employeeId},</if>
            
		</trim>
	</insert>
    
    <!-- 根据主键删除-->
	<delete id="delete">
		Delete From tb_employee_login
		Where id = #{id}
	</delete>
    
    <!-- 删除所有记录,返回受影响的行数 -->
	<delete id="deleteAll">
		Delete From tb_employee_login
	</delete>
    
    <!-- 更新非空列,返回受影响的行数 -->
	<update id="updateSelective">
		Update tb_employee_login
		<trim prefix="Set" suffixOverrides=",">
            <if test="Vo.loginName != null">login_name = #{Vo.loginName},</if>
            <if test="Vo.loginPass != null">login_pass = #{Vo.loginPass},</if>
            <if test="Vo.loginSalt != null">login_salt = #{Vo.loginSalt},</if>
            <if test="Vo.enableStatus != null">enable_status = #{Vo.enableStatus},</if>
            <if test="Vo.creatorId != null">creator_id = #{Vo.creatorId},</if>
            <if test="Vo.createTime != null">create_time = #{Vo.createTime},</if>
            <if test="Vo.updaterId != null">updater_id = #{Vo.updaterId},</if>
            <if test="Vo.updateTime != null">update_time = #{Vo.updateTime},</if>
            <if test="Vo.orders != null">orders = #{Vo.orders},</if>
            <if test="Vo.nickName != null">nick_name = #{Vo.nickName},</if>
            <if test="Vo.roleId != null">role_id = #{Vo.roleId},</if>
            <if test="Vo.employeeId != null">employee_id = #{Vo.employeeId},</if>
		</trim>
		Where tb_employee_login.id = #{Vo.id}
	</update>
    
    <resultMap type="EmployeeLoginVo" id="RM_Default">
        <id column="EmployeeLogin_id" property="id"/>
        <result column="EmployeeLogin_loginName" property="loginName"/>
        <result column="EmployeeLogin_loginPass" property="loginPass"/>
        <result column="EmployeeLogin_loginSalt" property="loginSalt"/>
        <result column="EmployeeLogin_enableStatus" property="enableStatus"/>
        <result column="EmployeeLogin_creatorId" property="creatorId"/>
        <result column="EmployeeLogin_createTime" property="createTime"/>
        <result column="EmployeeLogin_updaterId" property="updaterId"/>
        <result column="EmployeeLogin_updateTime" property="updateTime"/>
        <result column="EmployeeLogin_orders" property="orders"/>
        <result column="EmployeeLogin_nickName" property="nickName"/>
        <result column="EmployeeLogin_roleId" property="roleId"/>
        <result column="EmployeeLogin_employeeId" property="employeeId"/>
	</resultMap>
    
     <!-- ResultMap -->
	<resultMap type="EmployeeLoginVo" id="RM_getVo_Auto">
		<discriminator javaType="int" column="_chooseRM">
			<case value="0" resultMap="RM_Default" /><!-- Auto -->
		</discriminator>
	</resultMap>
    
    <!-- 根据主键查询一条记录,通过'__chooseRM'控制返回的列 -->
	<select id="getVo_Auto" resultMap="RM_getVo_Auto">
		Select
		<include refid="Sql_SelectColumns" />
		#{chooseRM} As _chooseRM
		From	tb_employee_login	As	tb_employee_login
		Where
		tb_employee_login.id = #{id}
	</select>
    
    <!-- 传入id,判断是否存在该记录 -->
	<select id="isExist_Auto" resultType="boolean">
		Select Count(id) > 0
		From	tb_employee_login	As	tb_employee_login
		Where
		tb_employee_login.id = #{id}
	</select>
    
    <!-- 查询记录数量 -->
	<select id="queryCount_Auto" resultType="Long">
		Select Count(tb_employee_login.id)
		From	tb_employee_login	As	tb_employee_login
        <trim prefix="Where" prefixOverrides="And | Or">
			<include refid="Sql_Where"/>
		</trim>
	</select>
    
    <resultMap type="EmployeeLoginVo" id="RM_queryVos_Auto">
        <discriminator javaType="int" column="_chooseRM">
			<case value="0" resultMap="RM_Default" /><!-- Auto -->
		</discriminator>
	</resultMap>
    
    <!-- 查询记录集合,通过'__chooseRM'控制返回的列 -->
	<select id="queryVos_Auto" resultMap="RM_queryVos_Auto">
		Select
		<include refid="Sql_SelectColumns"/>
		#{EmployeeLoginSearch.chooseRM} As _chooseRM
		From	tb_employee_login	As	tb_employee_login
        <trim prefix="Where" prefixOverrides="And | Or">
			<include refid="Sql_Where"/>
		</trim>
		<include refid="Sql_Order"/>
		Limit #{EmployeeLoginSearch.offset},#{EmployeeLoginSearch.limit}
	</select>
    

    <resultMap type="EmployeeLoginVo" id="RM_getVo_AdminView">
		<!-- <discriminator javaType="int" column="_chooseRM"> -->
        <id column="EmployeeLogin_id" property="id"/>
        <result column="EmployeeLogin_loginName" property="loginName"/>
        <result column="EmployeeLogin_loginPass" property="loginPass"/>
        <result column="EmployeeLogin_loginSalt" property="loginSalt"/>
        <result column="EmployeeLogin_enableStatus" property="enableStatus"/>
        <result column="EmployeeLogin_creatorId" property="creatorId"/>
        <result column="EmployeeLogin_createTime" property="createTime"/>
        <result column="EmployeeLogin_updaterId" property="updaterId"/>
        <result column="EmployeeLogin_updateTime" property="updateTime"/>
        <result column="EmployeeLogin_orders" property="orders"/>
        <result column="EmployeeLogin_nickName" property="nickName"/>
        <result column="EmployeeLogin_roleId" property="roleId"/>
        <result column="EmployeeLogin_employeeId" property="employeeId"/>
		<!-- </discriminator> -->
	</resultMap>
    
    <!-- 根据主键查询一条记录,专供AdminView调用 -->
	<select id="getVo_AdminView" resultMap="RM_getVo_AdminView">
		Select
		<include refid="Sql_SelectColumns" />
		#{chooseRM} As _chooseRM
		From	tb_employee_login	As	tb_employee_login
		Where
		tb_employee_login.id = #{id}
	</select>
    
    <resultMap type="EmployeeLoginVo" id="RM_getVo_preAdminEdit">
		<!-- <discriminator javaType="int" column="_chooseRM"> -->
        <id column="EmployeeLogin_id" property="id"/>
        <result column="EmployeeLogin_loginName" property="loginName"/>
        <result column="EmployeeLogin_loginPass" property="loginPass"/>
        <result column="EmployeeLogin_loginSalt" property="loginSalt"/>
        <result column="EmployeeLogin_enableStatus" property="enableStatus"/>
        <result column="EmployeeLogin_creatorId" property="creatorId"/>
        <result column="EmployeeLogin_createTime" property="createTime"/>
        <result column="EmployeeLogin_updaterId" property="updaterId"/>
        <result column="EmployeeLogin_updateTime" property="updateTime"/>
        <result column="EmployeeLogin_orders" property="orders"/>
        <result column="EmployeeLogin_nickName" property="nickName"/>
        <result column="EmployeeLogin_roleId" property="roleId"/>
        <result column="EmployeeLogin_employeeId" property="employeeId"/>
		<!-- </discriminator> -->
	</resultMap>
    
    <!-- 根据主键查询一条记录,专供preAdminEdit调用 -->
	<select id="getVo_preAdminEdit" resultMap="RM_getVo_preAdminEdit">
		Select
		<include refid="Sql_SelectColumns" />
		#{chooseRM} As _chooseRM
		From	tb_employee_login	As	tb_employee_login
		Where
		tb_employee_login.id = #{id}
	</select>
    
    <resultMap type="EmployeeLoginVo" id="RM_getVo_AdminEdit">
		<!-- <discriminator javaType="int" column="_chooseRM"> -->
        <id column="EmployeeLogin_id" property="id"/>
        <result column="EmployeeLogin_loginName" property="loginName"/>
        <result column="EmployeeLogin_loginPass" property="loginPass"/>
        <result column="EmployeeLogin_loginSalt" property="loginSalt"/>
        <result column="EmployeeLogin_enableStatus" property="enableStatus"/>
        <result column="EmployeeLogin_creatorId" property="creatorId"/>
        <result column="EmployeeLogin_createTime" property="createTime"/>
        <result column="EmployeeLogin_updaterId" property="updaterId"/>
        <result column="EmployeeLogin_updateTime" property="updateTime"/>
        <result column="EmployeeLogin_orders" property="orders"/>
        <result column="EmployeeLogin_nickName" property="nickName"/>
        <result column="EmployeeLogin_roleId" property="roleId"/>
        <result column="EmployeeLogin_employeeId" property="employeeId"/>
		<!-- </discriminator> -->
	</resultMap>
    
    <!-- 根据主键查询一条记录,专供AdminEdit调用 -->
	<select id="getVo_AdminEdit" resultMap="RM_getVo_AdminEdit">
		Select
		<include refid="Sql_SelectColumns" />
		#{chooseRM} As _chooseRM
		From	tb_employee_login	As	tb_employee_login
		Where
		tb_employee_login.id = #{id}
	</select>
    
    <resultMap type="EmployeeLoginVo" id="RM_queryVos_AdminList">
		<!-- <discriminator javaType="int" column="_chooseRM"> -->
        <id column="EmployeeLogin_id" property="id"/>
        <result column="EmployeeLogin_loginName" property="loginName"/>
        <result column="EmployeeLogin_loginPass" property="loginPass"/>
        <result column="EmployeeLogin_loginSalt" property="loginSalt"/>
        <result column="EmployeeLogin_enableStatus" property="enableStatus"/>
        <result column="EmployeeLogin_creatorId" property="creatorId"/>
        <result column="EmployeeLogin_createTime" property="createTime"/>
        <result column="EmployeeLogin_updaterId" property="updaterId"/>
        <result column="EmployeeLogin_updateTime" property="updateTime"/>
        <result column="EmployeeLogin_orders" property="orders"/>
        <result column="EmployeeLogin_nickName" property="nickName"/>
        <result column="EmployeeLogin_roleId" property="roleId"/>
        <result column="EmployeeLogin_employeeId" property="employeeId"/>
		<!-- </discriminator> -->
	</resultMap>
    
    <sql id="Sql_SelectColumns">
        tb_employee_login.id As EmployeeLogin_id,
        tb_employee_login.login_name As EmployeeLogin_loginName,
        tb_employee_login.login_pass As EmployeeLogin_loginPass,
        tb_employee_login.login_salt As EmployeeLogin_loginSalt,
        tb_employee_login.enable_status As EmployeeLogin_enableStatus,
        tb_employee_login.creator_id As EmployeeLogin_creatorId,
        tb_employee_login.create_time As EmployeeLogin_createTime,
        tb_employee_login.updater_id As EmployeeLogin_updaterId,
        tb_employee_login.update_time As EmployeeLogin_updateTime,
        tb_employee_login.orders As EmployeeLogin_orders,
        tb_employee_login.nick_name As EmployeeLogin_nickName,
        tb_employee_login.role_id As EmployeeLogin_roleId,
        tb_employee_login.employee_id As EmployeeLogin_employeeId,
	</sql>
    
    <sql id="Sql_Order">
		<trim prefix="Order By ">
    		<choose>
                <when test="EmployeeLoginSearch.sort != null">
                    EmployeeLogin_${EmployeeLoginSearch.sort} 
                    <if test="EmployeeLoginSearch.order != null">
                        ${EmployeeLoginSearch.order}
                    </if>
                </when>
                <otherwise>
                    EmployeeLogin_id Desc
                </otherwise>
            </choose>
		</trim>
	</sql>
    
    <sql id="Sql_Where">
        <if test="EmployeeLoginSearch.eqId != null">
			<![CDATA[ And tb_employee_login.id = #{EmployeeLoginSearch.eqId} ]]>
		</if>
		<if test="EmployeeLoginSearch.neId != null">
			<![CDATA[ And tb_employee_login.id != #{EmployeeLoginSearch.neId} ]]>
		</if>
        <if test="EmployeeLoginSearch.eqLoginName != null">
			<![CDATA[ And tb_employee_login.login_name = #{EmployeeLoginSearch.eqLoginName} ]]>
		</if>
		<if test="EmployeeLoginSearch.lkLoginName != null">
			<![CDATA[ And tb_employee_login.login_name Like '%${EmployeeLoginSearch.lkLoginName}%' ]]>
		</if>
        <if test="EmployeeLoginSearch.eqLoginPass != null">
			<![CDATA[ And tb_employee_login.login_pass = #{EmployeeLoginSearch.eqLoginPass} ]]>
		</if>
		<if test="EmployeeLoginSearch.lkLoginPass != null">
			<![CDATA[ And tb_employee_login.login_pass Like '%${EmployeeLoginSearch.lkLoginPass}%' ]]>
		</if>
        <if test="EmployeeLoginSearch.eqLoginSalt != null">
			<![CDATA[ And tb_employee_login.login_salt = #{EmployeeLoginSearch.eqLoginSalt} ]]>
		</if>
		<if test="EmployeeLoginSearch.lkLoginSalt != null">
			<![CDATA[ And tb_employee_login.login_salt Like '%${EmployeeLoginSearch.lkLoginSalt}%' ]]>
		</if>
        <if test="EmployeeLoginSearch.eqEnableStatus != null">
			<![CDATA[ And tb_employee_login.enable_status = #{EmployeeLoginSearch.eqEnableStatus} ]]>
		</if>
		<if test="EmployeeLoginSearch.neEnableStatus != null">
			<![CDATA[ And tb_employee_login.enable_status != #{EmployeeLoginSearch.neEnableStatus} ]]>
		</if>
        <if test="EmployeeLoginSearch.eqCreatorId != null">
			<![CDATA[ And tb_employee_login.creator_id = #{EmployeeLoginSearch.eqCreatorId} ]]>
		</if>
		<if test="EmployeeLoginSearch.neCreatorId != null">
			<![CDATA[ And tb_employee_login.creator_id != #{EmployeeLoginSearch.neCreatorId} ]]>
		</if>
        <if test="EmployeeLoginSearch.eqCreateTime != null">
			<![CDATA[ And date_format(tb_employee_login.create_time,'%Y-%m-%d') = date_format(#{EmployeeLoginSearch.eqCreateTime},'%Y-%m-%d') ]]>
		</if>
		<if test="EmployeeLoginSearch.geCreateTime != null">
			<![CDATA[ And tb_employee_login.create_time >= #{EmployeeLoginSearch.geCreateTime} ]]>
		</if>
		<if test="EmployeeLoginSearch.ltCreateTime != null">
			<![CDATA[ And tb_employee_login.create_time < #{EmployeeLoginSearch.ltCreateTime} ]]>
		</if>
        
        <if test="EmployeeLoginSearch.eqUpdaterId != null">
			<![CDATA[ And tb_employee_login.updater_id = #{EmployeeLoginSearch.eqUpdaterId} ]]>
		</if>
		<if test="EmployeeLoginSearch.neUpdaterId != null">
			<![CDATA[ And tb_employee_login.updater_id != #{EmployeeLoginSearch.neUpdaterId} ]]>
		</if>
        <if test="EmployeeLoginSearch.eqUpdateTime != null">
			<![CDATA[ And date_format(tb_employee_login.update_time,'%Y-%m-%d') = date_format(#{EmployeeLoginSearch.eqUpdateTime},'%Y-%m-%d') ]]>
		</if>
		<if test="EmployeeLoginSearch.geUpdateTime != null">
			<![CDATA[ And tb_employee_login.update_time >= #{EmployeeLoginSearch.geUpdateTime} ]]>
		</if>
		<if test="EmployeeLoginSearch.ltUpdateTime != null">
			<![CDATA[ And tb_employee_login.update_time < #{EmployeeLoginSearch.ltUpdateTime} ]]>
		</if>
        
        <if test="EmployeeLoginSearch.eqOrders != null">
			<![CDATA[ And tb_employee_login.orders = #{EmployeeLoginSearch.eqOrders} ]]>
		</if>
		<if test="EmployeeLoginSearch.neOrders != null">
			<![CDATA[ And tb_employee_login.orders != #{EmployeeLoginSearch.neOrders} ]]>
		</if>
        <if test="EmployeeLoginSearch.eqNickName != null">
			<![CDATA[ And tb_employee_login.nick_name = #{EmployeeLoginSearch.eqNickName} ]]>
		</if>
		<if test="EmployeeLoginSearch.lkNickName != null">
			<![CDATA[ And tb_employee_login.nick_name Like '%${EmployeeLoginSearch.lkNickName}%' ]]>
		</if>
        <if test="EmployeeLoginSearch.eqRoleId != null">
			<![CDATA[ And tb_employee_login.role_id = #{EmployeeLoginSearch.eqRoleId} ]]>
		</if>
		<if test="EmployeeLoginSearch.neRoleId != null">
			<![CDATA[ And tb_employee_login.role_id != #{EmployeeLoginSearch.neRoleId} ]]>
		</if>
        <if test="EmployeeLoginSearch.eqEmployeeId != null">
			<![CDATA[ And tb_employee_login.employee_id = #{EmployeeLoginSearch.eqEmployeeId} ]]>
		</if>
		<if test="EmployeeLoginSearch.neEmployeeId != null">
			<![CDATA[ And tb_employee_login.employee_id != #{EmployeeLoginSearch.neEmployeeId} ]]>
		</if>
    </sql>
</mapper>


