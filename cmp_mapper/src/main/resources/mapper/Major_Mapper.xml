<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hfxt.cmp.mapper.IMajorDao">
<!-- 新增的方法写在这里 -->


<!-- 保存非空列,返回受影响的行数 -->
	<insert id="saveSelective" useGeneratedKeys="true" keyProperty="Vo.id">
		Insert Into tb_major 
		<trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="Vo.majorName != null">major_name,</if>
            <if test="Vo.productId != null">product_id,</if>
            <if test="Vo.desc != null">desc,</if>
            <if test="Vo.creatorId != null">creator_id,</if>
             create_time,
            <if test="Vo.updaterId != null">updater_id,</if>
            <if test="Vo.updateTime != null">update_time,</if>
           
		</trim>
		<trim prefix="Values (" suffix=")" suffixOverrides=",">
            <if test="Vo.majorName != null">#{Vo.majorName},</if>
            <if test="Vo.productId != null">#{Vo.productId},</if>
            <if test="Vo.desc != null">#{Vo.desc},</if>
            <if test="Vo.creatorId != null">#{Vo.creatorId},</if>
            now(),
            <if test="Vo.updaterId != null">#{Vo.updaterId},</if>
            <if test="Vo.updateTime != null">#{Vo.updateTime},</if>
            
		</trim>
	</insert>
    
    <!-- 根据主键删除-->
	<delete id="delete">
		Delete From tb_major
		Where id = #{id}
	</delete>
    
    <!-- 删除所有记录,返回受影响的行数 -->
	<delete id="deleteAll">
		Delete From tb_major
	</delete>
    
    <!-- 更新非空列,返回受影响的行数 -->
	<update id="updateSelective">
		Update tb_major
		<trim prefix="Set" suffixOverrides=",">
            <if test="Vo.majorName != null">major_name = #{Vo.majorName},</if>
            <if test="Vo.productId != null">product_id = #{Vo.productId},</if>
            <if test="Vo.desc != null">desc = #{Vo.desc},</if>
            <if test="Vo.creatorId != null">creator_id = #{Vo.creatorId},</if>
            <if test="Vo.createTime != null">create_time = #{Vo.createTime},</if>
            <if test="Vo.updaterId != null">updater_id = #{Vo.updaterId},</if>
            <if test="Vo.updateTime != null">update_time = #{Vo.updateTime},</if>
		</trim>
		Where tb_major.id = #{Vo.id}
	</update>
    
    <resultMap type="MajorVo" id="RM_Default">
        <id column="Major_id" property="id"/>
        <result column="Major_majorName" property="majorName"/>
        <result column="Major_productId" property="productId"/>
        <result column="Major_desc" property="desc"/>
        <result column="Major_creatorId" property="creatorId"/>
        <result column="Major_createTime" property="createTime"/>
        <result column="Major_updaterId" property="updaterId"/>
        <result column="Major_updateTime" property="updateTime"/>
	</resultMap>
    
     <!-- ResultMap -->
	<resultMap type="MajorVo" id="RM_getVo_Auto">
		<discriminator javaType="int" column="_chooseRM">
			<case value="0" resultMap="RM_Default" /><!-- Auto -->
		</discriminator>
	</resultMap>
    
    <!-- 根据主键查询一条记录,通过'__chooseRM'控制返回的列 -->
	<select id="getVo_Auto" resultMap="RM_getVo_Auto">
		Select
		<include refid="Sql_SelectColumns" />
		#{chooseRM} As _chooseRM
		From	tb_major	As	tb_major
		Where
		tb_major.id = #{id}
	</select>
    
    <!-- 传入id,判断是否存在该记录 -->
	<select id="isExist_Auto" resultType="boolean">
		Select Count(id) > 0
		From	tb_major	As	tb_major
		Where
		tb_major.id = #{id}
	</select>
    
    <!-- 查询记录数量 -->
	<select id="queryCount_Auto" resultType="Long">
		Select Count(tb_major.id)
		From	tb_major	As	tb_major
        <trim prefix="Where" prefixOverrides="And | Or">
			<include refid="Sql_Where"/>
		</trim>
	</select>
    
    <resultMap type="MajorVo" id="RM_queryVos_Auto">
        <discriminator javaType="int" column="_chooseRM">
			<case value="0" resultMap="RM_Default" /><!-- Auto -->
		</discriminator>
	</resultMap>
    
    <!-- 查询记录集合,通过'__chooseRM'控制返回的列 -->
	<select id="queryVos_Auto" resultMap="RM_queryVos_Auto">
		Select
		<include refid="Sql_SelectColumns"/>
		#{MajorSearch.chooseRM} As _chooseRM
		From	tb_major	As	tb_major
        <trim prefix="Where" prefixOverrides="And | Or">
			<include refid="Sql_Where"/>
		</trim>
		<include refid="Sql_Order"/>
		Limit #{MajorSearch.offset},#{MajorSearch.limit}
	</select>
    

    <resultMap type="MajorVo" id="RM_getVo_AdminView">
		<!-- <discriminator javaType="int" column="_chooseRM"> -->
        <id column="Major_id" property="id"/>
        <result column="Major_majorName" property="majorName"/>
        <result column="Major_productId" property="productId"/>
        <result column="Major_desc" property="desc"/>
        <result column="Major_creatorId" property="creatorId"/>
        <result column="Major_createTime" property="createTime"/>
        <result column="Major_updaterId" property="updaterId"/>
        <result column="Major_updateTime" property="updateTime"/>
		<!-- </discriminator> -->
	</resultMap>
    
    <!-- 根据主键查询一条记录,专供AdminView调用 -->
	<select id="getVo_AdminView" resultMap="RM_getVo_AdminView">
		Select
		<include refid="Sql_SelectColumns" />
		#{chooseRM} As _chooseRM
		From	tb_major	As	tb_major
		Where
		tb_major.id = #{id}
	</select>
    
    <resultMap type="MajorVo" id="RM_getVo_preAdminEdit">
		<!-- <discriminator javaType="int" column="_chooseRM"> -->
        <id column="Major_id" property="id"/>
        <result column="Major_majorName" property="majorName"/>
        <result column="Major_productId" property="productId"/>
        <result column="Major_desc" property="desc"/>
        <result column="Major_creatorId" property="creatorId"/>
        <result column="Major_createTime" property="createTime"/>
        <result column="Major_updaterId" property="updaterId"/>
        <result column="Major_updateTime" property="updateTime"/>
		<!-- </discriminator> -->
	</resultMap>
    
    <!-- 根据主键查询一条记录,专供preAdminEdit调用 -->
	<select id="getVo_preAdminEdit" resultMap="RM_getVo_preAdminEdit">
		Select
		<include refid="Sql_SelectColumns" />
		#{chooseRM} As _chooseRM
		From	tb_major	As	tb_major
		Where
		tb_major.id = #{id}
	</select>
    
    <resultMap type="MajorVo" id="RM_getVo_AdminEdit">
		<!-- <discriminator javaType="int" column="_chooseRM"> -->
        <id column="Major_id" property="id"/>
        <result column="Major_majorName" property="majorName"/>
        <result column="Major_productId" property="productId"/>
        <result column="Major_desc" property="desc"/>
        <result column="Major_creatorId" property="creatorId"/>
        <result column="Major_createTime" property="createTime"/>
        <result column="Major_updaterId" property="updaterId"/>
        <result column="Major_updateTime" property="updateTime"/>
		<!-- </discriminator> -->
	</resultMap>
    
    <!-- 根据主键查询一条记录,专供AdminEdit调用 -->
	<select id="getVo_AdminEdit" resultMap="RM_getVo_AdminEdit">
		Select
		<include refid="Sql_SelectColumns" />
		#{chooseRM} As _chooseRM
		From	tb_major	As	tb_major
		Where
		tb_major.id = #{id}
	</select>
    
    <resultMap type="MajorVo" id="RM_queryVos_AdminList">
		<!-- <discriminator javaType="int" column="_chooseRM"> -->
        <id column="Major_id" property="id"/>
        <result column="Major_majorName" property="majorName"/>
        <result column="Major_productId" property="productId"/>
        <result column="Major_desc" property="desc"/>
        <result column="Major_creatorId" property="creatorId"/>
        <result column="Major_createTime" property="createTime"/>
        <result column="Major_updaterId" property="updaterId"/>
        <result column="Major_updateTime" property="updateTime"/>
		<!-- </discriminator> -->
	</resultMap>
    
    <sql id="Sql_SelectColumns">
        tb_major.id As Major_id,
        tb_major.major_name As Major_majorName,
        tb_major.product_id As Major_productId,
        tb_major.desc As Major_desc,
        tb_major.creator_id As Major_creatorId,
        tb_major.create_time As Major_createTime,
        tb_major.updater_id As Major_updaterId,
        tb_major.update_time As Major_updateTime,
	</sql>
    
    <sql id="Sql_Order">
		<trim prefix="Order By ">
    		<choose>
                <when test="MajorSearch.sort != null">
                    Major_${MajorSearch.sort} 
                    <if test="MajorSearch.order != null">
                        ${MajorSearch.order}
                    </if>
                </when>
                <otherwise>
                    Major_id Desc
                </otherwise>
            </choose>
		</trim>
	</sql>
    
    <sql id="Sql_Where">
        <if test="MajorSearch.eqId != null">
			<![CDATA[ And tb_major.id = #{MajorSearch.eqId} ]]>
		</if>
		<if test="MajorSearch.neId != null">
			<![CDATA[ And tb_major.id != #{MajorSearch.neId} ]]>
		</if>
        <if test="MajorSearch.eqMajorName != null">
			<![CDATA[ And tb_major.major_name = #{MajorSearch.eqMajorName} ]]>
		</if>
		<if test="MajorSearch.lkMajorName != null">
			<![CDATA[ And tb_major.major_name Like '%${MajorSearch.lkMajorName}%' ]]>
		</if>
        <if test="MajorSearch.eqProductId != null">
			<![CDATA[ And tb_major.product_id = #{MajorSearch.eqProductId} ]]>
		</if>
		<if test="MajorSearch.neProductId != null">
			<![CDATA[ And tb_major.product_id != #{MajorSearch.neProductId} ]]>
		</if>
        <if test="MajorSearch.eqDesc != null">
			<![CDATA[ And tb_major.desc = #{MajorSearch.eqDesc} ]]>
		</if>
		<if test="MajorSearch.lkDesc != null">
			<![CDATA[ And tb_major.desc Like '%${MajorSearch.lkDesc}%' ]]>
		</if>
        <if test="MajorSearch.eqCreatorId != null">
			<![CDATA[ And tb_major.creator_id = #{MajorSearch.eqCreatorId} ]]>
		</if>
		<if test="MajorSearch.neCreatorId != null">
			<![CDATA[ And tb_major.creator_id != #{MajorSearch.neCreatorId} ]]>
		</if>
        <if test="MajorSearch.eqCreateTime != null">
			<![CDATA[ And date_format(tb_major.create_time,'%Y-%m-%d') = date_format(#{MajorSearch.eqCreateTime},'%Y-%m-%d') ]]>
		</if>
		<if test="MajorSearch.geCreateTime != null">
			<![CDATA[ And tb_major.create_time >= #{MajorSearch.geCreateTime} ]]>
		</if>
		<if test="MajorSearch.ltCreateTime != null">
			<![CDATA[ And tb_major.create_time < #{MajorSearch.ltCreateTime} ]]>
		</if>
        
        <if test="MajorSearch.eqUpdaterId != null">
			<![CDATA[ And tb_major.updater_id = #{MajorSearch.eqUpdaterId} ]]>
		</if>
		<if test="MajorSearch.neUpdaterId != null">
			<![CDATA[ And tb_major.updater_id != #{MajorSearch.neUpdaterId} ]]>
		</if>
        <if test="MajorSearch.eqUpdateTime != null">
			<![CDATA[ And date_format(tb_major.update_time,'%Y-%m-%d') = date_format(#{MajorSearch.eqUpdateTime},'%Y-%m-%d') ]]>
		</if>
		<if test="MajorSearch.geUpdateTime != null">
			<![CDATA[ And tb_major.update_time >= #{MajorSearch.geUpdateTime} ]]>
		</if>
		<if test="MajorSearch.ltUpdateTime != null">
			<![CDATA[ And tb_major.update_time < #{MajorSearch.ltUpdateTime} ]]>
		</if>
        
    </sql>
</mapper>


