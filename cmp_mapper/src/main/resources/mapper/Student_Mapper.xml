<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hfxt.cmp.mapper.IStudentDao">
<!-- 新增的方法写在这里 -->


<!-- 保存非空列,返回受影响的行数 -->
	<insert id="saveSelective" useGeneratedKeys="true" keyProperty="Vo.id">
		Insert Into tb_student 
		<trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="Vo.studentName != null">student_name,</if>
            <if test="Vo.studentSex != null">student_sex,</if>
            <if test="Vo.classId != null">class_id,</if>
            <if test="Vo.studentBirth != null">student_birth,</if>
            <if test="Vo.studentPhone != null">student_phone,</if>
            <if test="Vo.majorId != null">major_id,</if>
            <if test="Vo.studentCode != null">student_code,</if>
            <if test="Vo.studentAddress != null">student_address,</if>
            <if test="Vo.studentContact != null">student_contact,</if>
            <if test="Vo.desc != null">desc,</if>
            <if test="Vo.studentQQ != null">student_QQ,</if>
            <if test="Vo.studentEmail != null">student_email,</if>
            <if test="Vo.studentSchool != null">student_school,</if>
            <if test="Vo.studentEntryTime != null">student_entry_time,</if>
            <if test="Vo.studentUndergraduateMajor != null">student_undergraduate_major,</if>
            <if test="Vo.studentDegree != null">student_degree,</if>
            <if test="Vo.creatorId != null">creator_id,</if>
             create_time,
            <if test="Vo.updaterId != null">updater_id,</if>
            <if test="Vo.updateTime != null">update_time,</if>
           
		</trim>
		<trim prefix="Values (" suffix=")" suffixOverrides=",">
            <if test="Vo.studentName != null">#{Vo.studentName},</if>
            <if test="Vo.studentSex != null">#{Vo.studentSex},</if>
            <if test="Vo.classId != null">#{Vo.classId},</if>
            <if test="Vo.studentBirth != null">#{Vo.studentBirth},</if>
            <if test="Vo.studentPhone != null">#{Vo.studentPhone},</if>
            <if test="Vo.majorId != null">#{Vo.majorId},</if>
            <if test="Vo.studentCode != null">#{Vo.studentCode},</if>
            <if test="Vo.studentAddress != null">#{Vo.studentAddress},</if>
            <if test="Vo.studentContact != null">#{Vo.studentContact},</if>
            <if test="Vo.desc != null">#{Vo.desc},</if>
            <if test="Vo.studentQQ != null">#{Vo.studentQQ},</if>
            <if test="Vo.studentEmail != null">#{Vo.studentEmail},</if>
            <if test="Vo.studentSchool != null">#{Vo.studentSchool},</if>
            <if test="Vo.studentEntryTime != null">#{Vo.studentEntryTime},</if>
            <if test="Vo.studentUndergraduateMajor != null">#{Vo.studentUndergraduateMajor},</if>
            <if test="Vo.studentDegree != null">#{Vo.studentDegree},</if>
            <if test="Vo.creatorId != null">#{Vo.creatorId},</if>
            now(),
            <if test="Vo.updaterId != null">#{Vo.updaterId},</if>
            <if test="Vo.updateTime != null">#{Vo.updateTime},</if>
            
		</trim>
	</insert>
    
    <!-- 根据主键删除-->
	<delete id="delete">
		Delete From tb_student
		Where id = #{id}
	</delete>
    
    <!-- 删除所有记录,返回受影响的行数 -->
	<delete id="deleteAll">
		Delete From tb_student
	</delete>
    
    <!-- 更新非空列,返回受影响的行数 -->
	<update id="updateSelective">
		Update tb_student
		<trim prefix="Set" suffixOverrides=",">
            <if test="Vo.studentName != null">student_name = #{Vo.studentName},</if>
            <if test="Vo.studentSex != null">student_sex = #{Vo.studentSex},</if>
            <if test="Vo.classId != null">class_id = #{Vo.classId},</if>
            <if test="Vo.studentBirth != null">student_birth = #{Vo.studentBirth},</if>
            <if test="Vo.studentPhone != null">student_phone = #{Vo.studentPhone},</if>
            <if test="Vo.majorId != null">major_id = #{Vo.majorId},</if>
            <if test="Vo.studentCode != null">student_code = #{Vo.studentCode},</if>
            <if test="Vo.studentAddress != null">student_address = #{Vo.studentAddress},</if>
            <if test="Vo.studentContact != null">student_contact = #{Vo.studentContact},</if>
            <if test="Vo.desc != null">desc = #{Vo.desc},</if>
            <if test="Vo.studentQQ != null">student_QQ = #{Vo.studentQQ},</if>
            <if test="Vo.studentEmail != null">student_email = #{Vo.studentEmail},</if>
            <if test="Vo.studentSchool != null">student_school = #{Vo.studentSchool},</if>
            <if test="Vo.studentEntryTime != null">student_entry_time = #{Vo.studentEntryTime},</if>
            <if test="Vo.studentUndergraduateMajor != null">student_undergraduate_major = #{Vo.studentUndergraduateMajor},</if>
            <if test="Vo.studentDegree != null">student_degree = #{Vo.studentDegree},</if>
            <if test="Vo.creatorId != null">creator_id = #{Vo.creatorId},</if>
            <if test="Vo.createTime != null">create_time = #{Vo.createTime},</if>
            <if test="Vo.updaterId != null">updater_id = #{Vo.updaterId},</if>
            <if test="Vo.updateTime != null">update_time = #{Vo.updateTime},</if>
		</trim>
		Where tb_student.id = #{Vo.id}
	</update>
    
    <resultMap type="StudentVo" id="RM_Default">
        <id column="Student_id" property="id"/>
        <result column="Student_studentName" property="studentName"/>
        <result column="Student_studentSex" property="studentSex"/>
        <result column="Student_classId" property="classId"/>
        <result column="Student_studentBirth" property="studentBirth"/>
        <result column="Student_studentPhone" property="studentPhone"/>
        <result column="Student_majorId" property="majorId"/>
        <result column="Student_studentCode" property="studentCode"/>
        <result column="Student_studentAddress" property="studentAddress"/>
        <result column="Student_studentContact" property="studentContact"/>
        <result column="Student_desc" property="desc"/>
        <result column="Student_studentQQ" property="studentQQ"/>
        <result column="Student_studentEmail" property="studentEmail"/>
        <result column="Student_studentSchool" property="studentSchool"/>
        <result column="Student_studentEntryTime" property="studentEntryTime"/>
        <result column="Student_studentUndergraduateMajor" property="studentUndergraduateMajor"/>
        <result column="Student_studentDegree" property="studentDegree"/>
        <result column="Student_creatorId" property="creatorId"/>
        <result column="Student_createTime" property="createTime"/>
        <result column="Student_updaterId" property="updaterId"/>
        <result column="Student_updateTime" property="updateTime"/>
	</resultMap>
    
     <!-- ResultMap -->
	<resultMap type="StudentVo" id="RM_getVo_Auto">
		<discriminator javaType="int" column="_chooseRM">
			<case value="0" resultMap="RM_Default" /><!-- Auto -->
		</discriminator>
	</resultMap>
    
    <!-- 根据主键查询一条记录,通过'__chooseRM'控制返回的列 -->
	<select id="getVo_Auto" resultMap="RM_getVo_Auto">
		Select
		<include refid="Sql_SelectColumns" />
		#{chooseRM} As _chooseRM
		From	tb_student	As	tb_student
		Where
		tb_student.id = #{id}
	</select>
    
    <!-- 传入id,判断是否存在该记录 -->
	<select id="isExist_Auto" resultType="boolean">
		Select Count(id) > 0
		From	tb_student	As	tb_student
		Where
		tb_student.id = #{id}
	</select>
    
    <!-- 查询记录数量 -->
	<select id="queryCount_Auto" resultType="Long">
		Select Count(tb_student.id)
		From	tb_student	As	tb_student
        <trim prefix="Where" prefixOverrides="And | Or">
			<include refid="Sql_Where"/>
		</trim>
	</select>
    
    <resultMap type="StudentVo" id="RM_queryVos_Auto">
        <discriminator javaType="int" column="_chooseRM">
			<case value="0" resultMap="RM_Default" /><!-- Auto -->
		</discriminator>
	</resultMap>
    
    <!-- 查询记录集合,通过'__chooseRM'控制返回的列 -->
	<select id="queryVos_Auto" resultMap="RM_queryVos_Auto">
		Select
		<include refid="Sql_SelectColumns"/>
		#{StudentSearch.chooseRM} As _chooseRM
		From	tb_student	As	tb_student
        <trim prefix="Where" prefixOverrides="And | Or">
			<include refid="Sql_Where"/>
		</trim>
		<include refid="Sql_Order"/>
		Limit #{StudentSearch.offset},#{StudentSearch.limit}
	</select>
    

    <resultMap type="StudentVo" id="RM_getVo_AdminView">
		<!-- <discriminator javaType="int" column="_chooseRM"> -->
        <id column="Student_id" property="id"/>
        <result column="Student_studentName" property="studentName"/>
        <result column="Student_studentSex" property="studentSex"/>
        <result column="Student_classId" property="classId"/>
        <result column="Student_studentBirth" property="studentBirth"/>
        <result column="Student_studentPhone" property="studentPhone"/>
        <result column="Student_majorId" property="majorId"/>
        <result column="Student_studentCode" property="studentCode"/>
        <result column="Student_studentAddress" property="studentAddress"/>
        <result column="Student_studentContact" property="studentContact"/>
        <result column="Student_desc" property="desc"/>
        <result column="Student_studentQQ" property="studentQQ"/>
        <result column="Student_studentEmail" property="studentEmail"/>
        <result column="Student_studentSchool" property="studentSchool"/>
        <result column="Student_studentEntryTime" property="studentEntryTime"/>
        <result column="Student_studentUndergraduateMajor" property="studentUndergraduateMajor"/>
        <result column="Student_studentDegree" property="studentDegree"/>
        <result column="Student_creatorId" property="creatorId"/>
        <result column="Student_createTime" property="createTime"/>
        <result column="Student_updaterId" property="updaterId"/>
        <result column="Student_updateTime" property="updateTime"/>
		<!-- </discriminator> -->
	</resultMap>
    
    <!-- 根据主键查询一条记录,专供AdminView调用 -->
	<select id="getVo_AdminView" resultMap="RM_getVo_AdminView">
		Select
		<include refid="Sql_SelectColumns" />
		#{chooseRM} As _chooseRM
		From	tb_student	As	tb_student
		Where
		tb_student.id = #{id}
	</select>
    
    <resultMap type="StudentVo" id="RM_getVo_preAdminEdit">
		<!-- <discriminator javaType="int" column="_chooseRM"> -->
        <id column="Student_id" property="id"/>
        <result column="Student_studentName" property="studentName"/>
        <result column="Student_studentSex" property="studentSex"/>
        <result column="Student_classId" property="classId"/>
        <result column="Student_studentBirth" property="studentBirth"/>
        <result column="Student_studentPhone" property="studentPhone"/>
        <result column="Student_majorId" property="majorId"/>
        <result column="Student_studentCode" property="studentCode"/>
        <result column="Student_studentAddress" property="studentAddress"/>
        <result column="Student_studentContact" property="studentContact"/>
        <result column="Student_desc" property="desc"/>
        <result column="Student_studentQQ" property="studentQQ"/>
        <result column="Student_studentEmail" property="studentEmail"/>
        <result column="Student_studentSchool" property="studentSchool"/>
        <result column="Student_studentEntryTime" property="studentEntryTime"/>
        <result column="Student_studentUndergraduateMajor" property="studentUndergraduateMajor"/>
        <result column="Student_studentDegree" property="studentDegree"/>
        <result column="Student_creatorId" property="creatorId"/>
        <result column="Student_createTime" property="createTime"/>
        <result column="Student_updaterId" property="updaterId"/>
        <result column="Student_updateTime" property="updateTime"/>
		<!-- </discriminator> -->
	</resultMap>
    
    <!-- 根据主键查询一条记录,专供preAdminEdit调用 -->
	<select id="getVo_preAdminEdit" resultMap="RM_getVo_preAdminEdit">
		Select
		<include refid="Sql_SelectColumns" />
		#{chooseRM} As _chooseRM
		From	tb_student	As	tb_student
		Where
		tb_student.id = #{id}
	</select>
    
    <resultMap type="StudentVo" id="RM_getVo_AdminEdit">
		<!-- <discriminator javaType="int" column="_chooseRM"> -->
        <id column="Student_id" property="id"/>
        <result column="Student_studentName" property="studentName"/>
        <result column="Student_studentSex" property="studentSex"/>
        <result column="Student_classId" property="classId"/>
        <result column="Student_studentBirth" property="studentBirth"/>
        <result column="Student_studentPhone" property="studentPhone"/>
        <result column="Student_majorId" property="majorId"/>
        <result column="Student_studentCode" property="studentCode"/>
        <result column="Student_studentAddress" property="studentAddress"/>
        <result column="Student_studentContact" property="studentContact"/>
        <result column="Student_desc" property="desc"/>
        <result column="Student_studentQQ" property="studentQQ"/>
        <result column="Student_studentEmail" property="studentEmail"/>
        <result column="Student_studentSchool" property="studentSchool"/>
        <result column="Student_studentEntryTime" property="studentEntryTime"/>
        <result column="Student_studentUndergraduateMajor" property="studentUndergraduateMajor"/>
        <result column="Student_studentDegree" property="studentDegree"/>
        <result column="Student_creatorId" property="creatorId"/>
        <result column="Student_createTime" property="createTime"/>
        <result column="Student_updaterId" property="updaterId"/>
        <result column="Student_updateTime" property="updateTime"/>
		<!-- </discriminator> -->
	</resultMap>
    
    <!-- 根据主键查询一条记录,专供AdminEdit调用 -->
	<select id="getVo_AdminEdit" resultMap="RM_getVo_AdminEdit">
		Select
		<include refid="Sql_SelectColumns" />
		#{chooseRM} As _chooseRM
		From	tb_student	As	tb_student
		Where
		tb_student.id = #{id}
	</select>
    
    <resultMap type="StudentVo" id="RM_queryVos_AdminList">
		<!-- <discriminator javaType="int" column="_chooseRM"> -->
        <id column="Student_id" property="id"/>
        <result column="Student_studentName" property="studentName"/>
        <result column="Student_studentSex" property="studentSex"/>
        <result column="Student_classId" property="classId"/>
        <result column="Student_studentBirth" property="studentBirth"/>
        <result column="Student_studentPhone" property="studentPhone"/>
        <result column="Student_majorId" property="majorId"/>
        <result column="Student_studentCode" property="studentCode"/>
        <result column="Student_studentAddress" property="studentAddress"/>
        <result column="Student_studentContact" property="studentContact"/>
        <result column="Student_desc" property="desc"/>
        <result column="Student_studentQQ" property="studentQQ"/>
        <result column="Student_studentEmail" property="studentEmail"/>
        <result column="Student_studentSchool" property="studentSchool"/>
        <result column="Student_studentEntryTime" property="studentEntryTime"/>
        <result column="Student_studentUndergraduateMajor" property="studentUndergraduateMajor"/>
        <result column="Student_studentDegree" property="studentDegree"/>
        <result column="Student_creatorId" property="creatorId"/>
        <result column="Student_createTime" property="createTime"/>
        <result column="Student_updaterId" property="updaterId"/>
        <result column="Student_updateTime" property="updateTime"/>
		<!-- </discriminator> -->
	</resultMap>
    
    <sql id="Sql_SelectColumns">
        tb_student.id As Student_id,
        tb_student.student_name As Student_studentName,
        tb_student.student_sex As Student_studentSex,
        tb_student.class_id As Student_classId,
        tb_student.student_birth As Student_studentBirth,
        tb_student.student_phone As Student_studentPhone,
        tb_student.major_id As Student_majorId,
        tb_student.student_code As Student_studentCode,
        tb_student.student_address As Student_studentAddress,
        tb_student.student_contact As Student_studentContact,
        tb_student.desc As Student_desc,
        tb_student.student_QQ As Student_studentQQ,
        tb_student.student_email As Student_studentEmail,
        tb_student.student_school As Student_studentSchool,
        tb_student.student_entry_time As Student_studentEntryTime,
        tb_student.student_undergraduate_major As Student_studentUndergraduateMajor,
        tb_student.student_degree As Student_studentDegree,
        tb_student.creator_id As Student_creatorId,
        tb_student.create_time As Student_createTime,
        tb_student.updater_id As Student_updaterId,
        tb_student.update_time As Student_updateTime,
	</sql>
    
    <sql id="Sql_Order">
		<trim prefix="Order By ">
    		<choose>
                <when test="StudentSearch.sort != null">
                    Student_${StudentSearch.sort} 
                    <if test="StudentSearch.order != null">
                        ${StudentSearch.order}
                    </if>
                </when>
                <otherwise>
                    Student_id Desc
                </otherwise>
            </choose>
		</trim>
	</sql>
    
    <sql id="Sql_Where">
        <if test="StudentSearch.eqId != null">
			<![CDATA[ And tb_student.id = #{StudentSearch.eqId} ]]>
		</if>
		<if test="StudentSearch.neId != null">
			<![CDATA[ And tb_student.id != #{StudentSearch.neId} ]]>
		</if>
        <if test="StudentSearch.eqStudentName != null">
			<![CDATA[ And tb_student.student_name = #{StudentSearch.eqStudentName} ]]>
		</if>
		<if test="StudentSearch.lkStudentName != null">
			<![CDATA[ And tb_student.student_name Like '%${StudentSearch.lkStudentName}%' ]]>
		</if>
        <if test="StudentSearch.eqStudentSex != null">
			<![CDATA[ And tb_student.student_sex = #{StudentSearch.eqStudentSex} ]]>
		</if>
		<if test="StudentSearch.lkStudentSex != null">
			<![CDATA[ And tb_student.student_sex Like '%${StudentSearch.lkStudentSex}%' ]]>
		</if>
        <if test="StudentSearch.eqClassId != null">
			<![CDATA[ And tb_student.class_id = #{StudentSearch.eqClassId} ]]>
		</if>
		<if test="StudentSearch.neClassId != null">
			<![CDATA[ And tb_student.class_id != #{StudentSearch.neClassId} ]]>
		</if>
        <if test="StudentSearch.eqStudentBirth != null">
			<![CDATA[ And date_format(tb_student.student_birth,'%Y-%m-%d') = date_format(#{StudentSearch.eqStudentBirth},'%Y-%m-%d') ]]>
		</if>
		<if test="StudentSearch.geStudentBirth != null">
			<![CDATA[ And tb_student.student_birth >= #{StudentSearch.geStudentBirth} ]]>
		</if>
		<if test="StudentSearch.ltStudentBirth != null">
			<![CDATA[ And tb_student.student_birth < #{StudentSearch.ltStudentBirth} ]]>
		</if>
        
        <if test="StudentSearch.eqStudentPhone != null">
			<![CDATA[ And tb_student.student_phone = #{StudentSearch.eqStudentPhone} ]]>
		</if>
		<if test="StudentSearch.lkStudentPhone != null">
			<![CDATA[ And tb_student.student_phone Like '%${StudentSearch.lkStudentPhone}%' ]]>
		</if>
        <if test="StudentSearch.eqMajorId != null">
			<![CDATA[ And tb_student.major_id = #{StudentSearch.eqMajorId} ]]>
		</if>
		<if test="StudentSearch.neMajorId != null">
			<![CDATA[ And tb_student.major_id != #{StudentSearch.neMajorId} ]]>
		</if>
        <if test="StudentSearch.eqStudentCode != null">
			<![CDATA[ And tb_student.student_code = #{StudentSearch.eqStudentCode} ]]>
		</if>
		<if test="StudentSearch.lkStudentCode != null">
			<![CDATA[ And tb_student.student_code Like '%${StudentSearch.lkStudentCode}%' ]]>
		</if>
        <if test="StudentSearch.eqStudentAddress != null">
			<![CDATA[ And tb_student.student_address = #{StudentSearch.eqStudentAddress} ]]>
		</if>
		<if test="StudentSearch.lkStudentAddress != null">
			<![CDATA[ And tb_student.student_address Like '%${StudentSearch.lkStudentAddress}%' ]]>
		</if>
        <if test="StudentSearch.eqStudentContact != null">
			<![CDATA[ And tb_student.student_contact = #{StudentSearch.eqStudentContact} ]]>
		</if>
		<if test="StudentSearch.lkStudentContact != null">
			<![CDATA[ And tb_student.student_contact Like '%${StudentSearch.lkStudentContact}%' ]]>
		</if>
        <if test="StudentSearch.eqDesc != null">
			<![CDATA[ And tb_student.desc = #{StudentSearch.eqDesc} ]]>
		</if>
		<if test="StudentSearch.lkDesc != null">
			<![CDATA[ And tb_student.desc Like '%${StudentSearch.lkDesc}%' ]]>
		</if>
        <if test="StudentSearch.eqStudentQQ != null">
			<![CDATA[ And tb_student.student_QQ = #{StudentSearch.eqStudentQQ} ]]>
		</if>
		<if test="StudentSearch.lkStudentQQ != null">
			<![CDATA[ And tb_student.student_QQ Like '%${StudentSearch.lkStudentQQ}%' ]]>
		</if>
        <if test="StudentSearch.eqStudentEmail != null">
			<![CDATA[ And tb_student.student_email = #{StudentSearch.eqStudentEmail} ]]>
		</if>
		<if test="StudentSearch.lkStudentEmail != null">
			<![CDATA[ And tb_student.student_email Like '%${StudentSearch.lkStudentEmail}%' ]]>
		</if>
        <if test="StudentSearch.eqStudentSchool != null">
			<![CDATA[ And tb_student.student_school = #{StudentSearch.eqStudentSchool} ]]>
		</if>
		<if test="StudentSearch.lkStudentSchool != null">
			<![CDATA[ And tb_student.student_school Like '%${StudentSearch.lkStudentSchool}%' ]]>
		</if>
        <if test="StudentSearch.eqStudentEntryTime != null">
			<![CDATA[ And date_format(tb_student.student_entry_time,'%Y-%m-%d') = date_format(#{StudentSearch.eqStudentEntryTime},'%Y-%m-%d') ]]>
		</if>
		<if test="StudentSearch.geStudentEntryTime != null">
			<![CDATA[ And tb_student.student_entry_time >= #{StudentSearch.geStudentEntryTime} ]]>
		</if>
		<if test="StudentSearch.ltStudentEntryTime != null">
			<![CDATA[ And tb_student.student_entry_time < #{StudentSearch.ltStudentEntryTime} ]]>
		</if>
        
        <if test="StudentSearch.eqStudentUndergraduateMajor != null">
			<![CDATA[ And tb_student.student_undergraduate_major = #{StudentSearch.eqStudentUndergraduateMajor} ]]>
		</if>
		<if test="StudentSearch.lkStudentUndergraduateMajor != null">
			<![CDATA[ And tb_student.student_undergraduate_major Like '%${StudentSearch.lkStudentUndergraduateMajor}%' ]]>
		</if>
        <if test="StudentSearch.eqStudentDegree != null">
			<![CDATA[ And tb_student.student_degree = #{StudentSearch.eqStudentDegree} ]]>
		</if>
		<if test="StudentSearch.lkStudentDegree != null">
			<![CDATA[ And tb_student.student_degree Like '%${StudentSearch.lkStudentDegree}%' ]]>
		</if>
        <if test="StudentSearch.eqCreatorId != null">
			<![CDATA[ And tb_student.creator_id = #{StudentSearch.eqCreatorId} ]]>
		</if>
		<if test="StudentSearch.neCreatorId != null">
			<![CDATA[ And tb_student.creator_id != #{StudentSearch.neCreatorId} ]]>
		</if>
        <if test="StudentSearch.eqCreateTime != null">
			<![CDATA[ And date_format(tb_student.create_time,'%Y-%m-%d') = date_format(#{StudentSearch.eqCreateTime},'%Y-%m-%d') ]]>
		</if>
		<if test="StudentSearch.geCreateTime != null">
			<![CDATA[ And tb_student.create_time >= #{StudentSearch.geCreateTime} ]]>
		</if>
		<if test="StudentSearch.ltCreateTime != null">
			<![CDATA[ And tb_student.create_time < #{StudentSearch.ltCreateTime} ]]>
		</if>
        
        <if test="StudentSearch.eqUpdaterId != null">
			<![CDATA[ And tb_student.updater_id = #{StudentSearch.eqUpdaterId} ]]>
		</if>
		<if test="StudentSearch.neUpdaterId != null">
			<![CDATA[ And tb_student.updater_id != #{StudentSearch.neUpdaterId} ]]>
		</if>
        <if test="StudentSearch.eqUpdateTime != null">
			<![CDATA[ And date_format(tb_student.update_time,'%Y-%m-%d') = date_format(#{StudentSearch.eqUpdateTime},'%Y-%m-%d') ]]>
		</if>
		<if test="StudentSearch.geUpdateTime != null">
			<![CDATA[ And tb_student.update_time >= #{StudentSearch.geUpdateTime} ]]>
		</if>
		<if test="StudentSearch.ltUpdateTime != null">
			<![CDATA[ And tb_student.update_time < #{StudentSearch.ltUpdateTime} ]]>
		</if>
        
    </sql>
</mapper>


