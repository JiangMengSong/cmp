<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hfxt.cmp.mapper.IEmployeeDao">
<!-- 新增的方法写在这里 -->


<!-- 保存非空列,返回受影响的行数 -->
	<insert id="saveSelective" useGeneratedKeys="true" keyProperty="Vo.id">
		Insert Into tb_employee 
		<trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="Vo.employeeName != null">employee_name,</if>
            <if test="Vo.employeeAddress != null">employee_address,</if>
            <if test="Vo.employeeSex != null">employee_sex,</if>
            <if test="Vo.employeeContact != null">employee_contact,</if>
            <if test="Vo.employeeBirth != null">employee_birth,</if>
            <if test="Vo.desc != null">desc,</if>
            <if test="Vo.employeeQQ != null">employee_QQ,</if>
            <if test="Vo.employeeEntryTime != null">employee_entry_time,</if>
            <if test="Vo.employeeUndergraduateMajor != null">employee_undergraduate_major,</if>
            <if test="Vo.employeeDegree != null">employee_degree,</if>
            <if test="Vo.employeeEmail != null">employee_email,</if>
            <if test="Vo.employeePhone != null">employee_phone,</if>
           
		</trim>
		<trim prefix="Values (" suffix=")" suffixOverrides=",">
            <if test="Vo.employeeName != null">#{Vo.employeeName},</if>
            <if test="Vo.employeeAddress != null">#{Vo.employeeAddress},</if>
            <if test="Vo.employeeSex != null">#{Vo.employeeSex},</if>
            <if test="Vo.employeeContact != null">#{Vo.employeeContact},</if>
            <if test="Vo.employeeBirth != null">#{Vo.employeeBirth},</if>
            <if test="Vo.desc != null">#{Vo.desc},</if>
            <if test="Vo.employeeQQ != null">#{Vo.employeeQQ},</if>
            <if test="Vo.employeeEntryTime != null">#{Vo.employeeEntryTime},</if>
            <if test="Vo.employeeUndergraduateMajor != null">#{Vo.employeeUndergraduateMajor},</if>
            <if test="Vo.employeeDegree != null">#{Vo.employeeDegree},</if>
            <if test="Vo.employeeEmail != null">#{Vo.employeeEmail},</if>
            <if test="Vo.employeePhone != null">#{Vo.employeePhone},</if>
            
		</trim>
	</insert>
    
    <!-- 根据主键删除-->
	<delete id="delete">
		Delete From tb_employee
		Where id = #{id}
	</delete>
    
    <!-- 删除所有记录,返回受影响的行数 -->
	<delete id="deleteAll">
		Delete From tb_employee
	</delete>
    
    <!-- 更新非空列,返回受影响的行数 -->
	<update id="updateSelective">
		Update tb_employee
		<trim prefix="Set" suffixOverrides=",">
            <if test="Vo.employeeName != null">employee_name = #{Vo.employeeName},</if>
            <if test="Vo.employeeAddress != null">employee_address = #{Vo.employeeAddress},</if>
            <if test="Vo.employeeSex != null">employee_sex = #{Vo.employeeSex},</if>
            <if test="Vo.employeeContact != null">employee_contact = #{Vo.employeeContact},</if>
            <if test="Vo.employeeBirth != null">employee_birth = #{Vo.employeeBirth},</if>
            <if test="Vo.desc != null">desc = #{Vo.desc},</if>
            <if test="Vo.employeeQQ != null">employee_QQ = #{Vo.employeeQQ},</if>
            <if test="Vo.employeeEntryTime != null">employee_entry_time = #{Vo.employeeEntryTime},</if>
            <if test="Vo.employeeUndergraduateMajor != null">employee_undergraduate_major = #{Vo.employeeUndergraduateMajor},</if>
            <if test="Vo.employeeDegree != null">employee_degree = #{Vo.employeeDegree},</if>
            <if test="Vo.employeeEmail != null">employee_email = #{Vo.employeeEmail},</if>
            <if test="Vo.employeePhone != null">employee_phone = #{Vo.employeePhone},</if>
		</trim>
		Where tb_employee.id = #{Vo.id}
	</update>
    
    <resultMap type="EmployeeVo" id="RM_Default">
        <id column="Employee_id" property="id"/>
        <result column="Employee_employeeName" property="employeeName"/>
        <result column="Employee_employeeAddress" property="employeeAddress"/>
        <result column="Employee_employeeSex" property="employeeSex"/>
        <result column="Employee_employeeContact" property="employeeContact"/>
        <result column="Employee_employeeBirth" property="employeeBirth"/>
        <result column="Employee_desc" property="desc"/>
        <result column="Employee_employeeQQ" property="employeeQQ"/>
        <result column="Employee_employeeEntryTime" property="employeeEntryTime"/>
        <result column="Employee_employeeUndergraduateMajor" property="employeeUndergraduateMajor"/>
        <result column="Employee_employeeDegree" property="employeeDegree"/>
        <result column="Employee_employeeEmail" property="employeeEmail"/>
        <result column="Employee_employeePhone" property="employeePhone"/>
	</resultMap>
    
     <!-- ResultMap -->
	<resultMap type="EmployeeVo" id="RM_getVo_Auto">
		<discriminator javaType="int" column="_chooseRM">
			<case value="0" resultMap="RM_Default" /><!-- Auto -->
		</discriminator>
	</resultMap>
    
    <!-- 根据主键查询一条记录,通过'__chooseRM'控制返回的列 -->
	<select id="getVo_Auto" resultMap="RM_getVo_Auto">
		Select
		<include refid="Sql_SelectColumns" />
		#{chooseRM} As _chooseRM
		From	tb_employee	As	tb_employee
		Where
		tb_employee.id = #{id}
	</select>
    
    <!-- 传入id,判断是否存在该记录 -->
	<select id="isExist_Auto" resultType="boolean">
		Select Count(id) > 0
		From	tb_employee	As	tb_employee
		Where
		tb_employee.id = #{id}
	</select>
    
    <!-- 查询记录数量 -->
	<select id="queryCount_Auto" resultType="Long">
		Select Count(tb_employee.id)
		From	tb_employee	As	tb_employee
        <trim prefix="Where" prefixOverrides="And | Or">
			<include refid="Sql_Where"/>
		</trim>
	</select>
    
    <resultMap type="EmployeeVo" id="RM_queryVos_Auto">
        <discriminator javaType="int" column="_chooseRM">
			<case value="0" resultMap="RM_Default" /><!-- Auto -->
		</discriminator>
	</resultMap>
    
    <!-- 查询记录集合,通过'__chooseRM'控制返回的列 -->
	<select id="queryVos_Auto" resultMap="RM_queryVos_Auto">
		Select
		<include refid="Sql_SelectColumns"/>
		#{EmployeeSearch.chooseRM} As _chooseRM
		From	tb_employee	As	tb_employee
        <trim prefix="Where" prefixOverrides="And | Or">
			<include refid="Sql_Where"/>
		</trim>
		<include refid="Sql_Order"/>
		Limit #{EmployeeSearch.offset},#{EmployeeSearch.limit}
	</select>
    

    <resultMap type="EmployeeVo" id="RM_getVo_AdminView">
		<!-- <discriminator javaType="int" column="_chooseRM"> -->
        <id column="Employee_id" property="id"/>
        <result column="Employee_employeeName" property="employeeName"/>
        <result column="Employee_employeeAddress" property="employeeAddress"/>
        <result column="Employee_employeeSex" property="employeeSex"/>
        <result column="Employee_employeeContact" property="employeeContact"/>
        <result column="Employee_employeeBirth" property="employeeBirth"/>
        <result column="Employee_desc" property="desc"/>
        <result column="Employee_employeeQQ" property="employeeQQ"/>
        <result column="Employee_employeeEntryTime" property="employeeEntryTime"/>
        <result column="Employee_employeeUndergraduateMajor" property="employeeUndergraduateMajor"/>
        <result column="Employee_employeeDegree" property="employeeDegree"/>
        <result column="Employee_employeeEmail" property="employeeEmail"/>
        <result column="Employee_employeePhone" property="employeePhone"/>
		<!-- </discriminator> -->
	</resultMap>
    
    <!-- 根据主键查询一条记录,专供AdminView调用 -->
	<select id="getVo_AdminView" resultMap="RM_getVo_AdminView">
		Select
		<include refid="Sql_SelectColumns" />
		#{chooseRM} As _chooseRM
		From	tb_employee	As	tb_employee
		Where
		tb_employee.id = #{id}
	</select>
    
    <resultMap type="EmployeeVo" id="RM_getVo_preAdminEdit">
		<!-- <discriminator javaType="int" column="_chooseRM"> -->
        <id column="Employee_id" property="id"/>
        <result column="Employee_employeeName" property="employeeName"/>
        <result column="Employee_employeeAddress" property="employeeAddress"/>
        <result column="Employee_employeeSex" property="employeeSex"/>
        <result column="Employee_employeeContact" property="employeeContact"/>
        <result column="Employee_employeeBirth" property="employeeBirth"/>
        <result column="Employee_desc" property="desc"/>
        <result column="Employee_employeeQQ" property="employeeQQ"/>
        <result column="Employee_employeeEntryTime" property="employeeEntryTime"/>
        <result column="Employee_employeeUndergraduateMajor" property="employeeUndergraduateMajor"/>
        <result column="Employee_employeeDegree" property="employeeDegree"/>
        <result column="Employee_employeeEmail" property="employeeEmail"/>
        <result column="Employee_employeePhone" property="employeePhone"/>
		<!-- </discriminator> -->
	</resultMap>
    
    <!-- 根据主键查询一条记录,专供preAdminEdit调用 -->
	<select id="getVo_preAdminEdit" resultMap="RM_getVo_preAdminEdit">
		Select
		<include refid="Sql_SelectColumns" />
		#{chooseRM} As _chooseRM
		From	tb_employee	As	tb_employee
		Where
		tb_employee.id = #{id}
	</select>
    
    <resultMap type="EmployeeVo" id="RM_getVo_AdminEdit">
		<!-- <discriminator javaType="int" column="_chooseRM"> -->
        <id column="Employee_id" property="id"/>
        <result column="Employee_employeeName" property="employeeName"/>
        <result column="Employee_employeeAddress" property="employeeAddress"/>
        <result column="Employee_employeeSex" property="employeeSex"/>
        <result column="Employee_employeeContact" property="employeeContact"/>
        <result column="Employee_employeeBirth" property="employeeBirth"/>
        <result column="Employee_desc" property="desc"/>
        <result column="Employee_employeeQQ" property="employeeQQ"/>
        <result column="Employee_employeeEntryTime" property="employeeEntryTime"/>
        <result column="Employee_employeeUndergraduateMajor" property="employeeUndergraduateMajor"/>
        <result column="Employee_employeeDegree" property="employeeDegree"/>
        <result column="Employee_employeeEmail" property="employeeEmail"/>
        <result column="Employee_employeePhone" property="employeePhone"/>
		<!-- </discriminator> -->
	</resultMap>
    
    <!-- 根据主键查询一条记录,专供AdminEdit调用 -->
	<select id="getVo_AdminEdit" resultMap="RM_getVo_AdminEdit">
		Select
		<include refid="Sql_SelectColumns" />
		#{chooseRM} As _chooseRM
		From	tb_employee	As	tb_employee
		Where
		tb_employee.id = #{id}
	</select>
    
    <resultMap type="EmployeeVo" id="RM_queryVos_AdminList">
		<!-- <discriminator javaType="int" column="_chooseRM"> -->
        <id column="Employee_id" property="id"/>
        <result column="Employee_employeeName" property="employeeName"/>
        <result column="Employee_employeeAddress" property="employeeAddress"/>
        <result column="Employee_employeeSex" property="employeeSex"/>
        <result column="Employee_employeeContact" property="employeeContact"/>
        <result column="Employee_employeeBirth" property="employeeBirth"/>
        <result column="Employee_desc" property="desc"/>
        <result column="Employee_employeeQQ" property="employeeQQ"/>
        <result column="Employee_employeeEntryTime" property="employeeEntryTime"/>
        <result column="Employee_employeeUndergraduateMajor" property="employeeUndergraduateMajor"/>
        <result column="Employee_employeeDegree" property="employeeDegree"/>
        <result column="Employee_employeeEmail" property="employeeEmail"/>
        <result column="Employee_employeePhone" property="employeePhone"/>
		<!-- </discriminator> -->
	</resultMap>
    
    <sql id="Sql_SelectColumns">
        tb_employee.id As Employee_id,
        tb_employee.employee_name As Employee_employeeName,
        tb_employee.employee_address As Employee_employeeAddress,
        tb_employee.employee_sex As Employee_employeeSex,
        tb_employee.employee_contact As Employee_employeeContact,
        tb_employee.employee_birth As Employee_employeeBirth,
        tb_employee.desc As Employee_desc,
        tb_employee.employee_QQ As Employee_employeeQQ,
        tb_employee.employee_entry_time As Employee_employeeEntryTime,
        tb_employee.employee_undergraduate_major As Employee_employeeUndergraduateMajor,
        tb_employee.employee_degree As Employee_employeeDegree,
        tb_employee.employee_email As Employee_employeeEmail,
        tb_employee.employee_phone As Employee_employeePhone,
	</sql>
    
    <sql id="Sql_Order">
		<trim prefix="Order By ">
    		<choose>
                <when test="EmployeeSearch.sort != null">
                    Employee_${EmployeeSearch.sort} 
                    <if test="EmployeeSearch.order != null">
                        ${EmployeeSearch.order}
                    </if>
                </when>
                <otherwise>
                    Employee_id Desc
                </otherwise>
            </choose>
		</trim>
	</sql>
    
    <sql id="Sql_Where">
        <if test="EmployeeSearch.eqId != null">
			<![CDATA[ And tb_employee.id = #{EmployeeSearch.eqId} ]]>
		</if>
		<if test="EmployeeSearch.neId != null">
			<![CDATA[ And tb_employee.id != #{EmployeeSearch.neId} ]]>
		</if>
        <if test="EmployeeSearch.eqEmployeeName != null">
			<![CDATA[ And tb_employee.employee_name = #{EmployeeSearch.eqEmployeeName} ]]>
		</if>
		<if test="EmployeeSearch.lkEmployeeName != null">
			<![CDATA[ And tb_employee.employee_name Like '%${EmployeeSearch.lkEmployeeName}%' ]]>
		</if>
        <if test="EmployeeSearch.eqEmployeeAddress != null">
			<![CDATA[ And tb_employee.employee_address = #{EmployeeSearch.eqEmployeeAddress} ]]>
		</if>
		<if test="EmployeeSearch.lkEmployeeAddress != null">
			<![CDATA[ And tb_employee.employee_address Like '%${EmployeeSearch.lkEmployeeAddress}%' ]]>
		</if>
        <if test="EmployeeSearch.eqEmployeeSex != null">
			<![CDATA[ And tb_employee.employee_sex = #{EmployeeSearch.eqEmployeeSex} ]]>
		</if>
		<if test="EmployeeSearch.lkEmployeeSex != null">
			<![CDATA[ And tb_employee.employee_sex Like '%${EmployeeSearch.lkEmployeeSex}%' ]]>
		</if>
        <if test="EmployeeSearch.eqEmployeeContact != null">
			<![CDATA[ And tb_employee.employee_contact = #{EmployeeSearch.eqEmployeeContact} ]]>
		</if>
		<if test="EmployeeSearch.lkEmployeeContact != null">
			<![CDATA[ And tb_employee.employee_contact Like '%${EmployeeSearch.lkEmployeeContact}%' ]]>
		</if>
        <if test="EmployeeSearch.eqEmployeeBirth != null">
			<![CDATA[ And date_format(tb_employee.employee_birth,'%Y-%m-%d') = date_format(#{EmployeeSearch.eqEmployeeBirth},'%Y-%m-%d') ]]>
		</if>
		<if test="EmployeeSearch.geEmployeeBirth != null">
			<![CDATA[ And tb_employee.employee_birth >= #{EmployeeSearch.geEmployeeBirth} ]]>
		</if>
		<if test="EmployeeSearch.ltEmployeeBirth != null">
			<![CDATA[ And tb_employee.employee_birth < #{EmployeeSearch.ltEmployeeBirth} ]]>
		</if>
        
        <if test="EmployeeSearch.eqDesc != null">
			<![CDATA[ And tb_employee.desc = #{EmployeeSearch.eqDesc} ]]>
		</if>
		<if test="EmployeeSearch.lkDesc != null">
			<![CDATA[ And tb_employee.desc Like '%${EmployeeSearch.lkDesc}%' ]]>
		</if>
        <if test="EmployeeSearch.eqEmployeeQQ != null">
			<![CDATA[ And tb_employee.employee_QQ = #{EmployeeSearch.eqEmployeeQQ} ]]>
		</if>
		<if test="EmployeeSearch.lkEmployeeQQ != null">
			<![CDATA[ And tb_employee.employee_QQ Like '%${EmployeeSearch.lkEmployeeQQ}%' ]]>
		</if>
        <if test="EmployeeSearch.eqEmployeeEntryTime != null">
			<![CDATA[ And date_format(tb_employee.employee_entry_time,'%Y-%m-%d') = date_format(#{EmployeeSearch.eqEmployeeEntryTime},'%Y-%m-%d') ]]>
		</if>
		<if test="EmployeeSearch.geEmployeeEntryTime != null">
			<![CDATA[ And tb_employee.employee_entry_time >= #{EmployeeSearch.geEmployeeEntryTime} ]]>
		</if>
		<if test="EmployeeSearch.ltEmployeeEntryTime != null">
			<![CDATA[ And tb_employee.employee_entry_time < #{EmployeeSearch.ltEmployeeEntryTime} ]]>
		</if>
        
        <if test="EmployeeSearch.eqEmployeeUndergraduateMajor != null">
			<![CDATA[ And tb_employee.employee_undergraduate_major = #{EmployeeSearch.eqEmployeeUndergraduateMajor} ]]>
		</if>
		<if test="EmployeeSearch.lkEmployeeUndergraduateMajor != null">
			<![CDATA[ And tb_employee.employee_undergraduate_major Like '%${EmployeeSearch.lkEmployeeUndergraduateMajor}%' ]]>
		</if>
        <if test="EmployeeSearch.eqEmployeeDegree != null">
			<![CDATA[ And tb_employee.employee_degree = #{EmployeeSearch.eqEmployeeDegree} ]]>
		</if>
		<if test="EmployeeSearch.lkEmployeeDegree != null">
			<![CDATA[ And tb_employee.employee_degree Like '%${EmployeeSearch.lkEmployeeDegree}%' ]]>
		</if>
        <if test="EmployeeSearch.eqEmployeeEmail != null">
			<![CDATA[ And tb_employee.employee_email = #{EmployeeSearch.eqEmployeeEmail} ]]>
		</if>
		<if test="EmployeeSearch.lkEmployeeEmail != null">
			<![CDATA[ And tb_employee.employee_email Like '%${EmployeeSearch.lkEmployeeEmail}%' ]]>
		</if>
        <if test="EmployeeSearch.eqEmployeePhone != null">
			<![CDATA[ And tb_employee.employee_phone = #{EmployeeSearch.eqEmployeePhone} ]]>
		</if>
		<if test="EmployeeSearch.lkEmployeePhone != null">
			<![CDATA[ And tb_employee.employee_phone Like '%${EmployeeSearch.lkEmployeePhone}%' ]]>
		</if>
    </sql>
</mapper>


