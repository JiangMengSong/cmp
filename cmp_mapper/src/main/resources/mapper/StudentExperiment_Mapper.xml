<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hfxt.cmp.mapper.IStudentExperimentDao">
<!-- 新增的方法写在这里 -->


<!-- 保存非空列,返回受影响的行数 -->
	<insert id="saveSelective" useGeneratedKeys="true" keyProperty="Vo.id">
		Insert Into tb_student_experiment 
		<trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="Vo.subjectId != null">subject_id,</if>
            <if test="Vo.studentId != null">student_id,</if>
            <if test="Vo.studentExperimentContent != null">student_experiment_content,</if>
            <if test="Vo.studentExperimentTime != null">student_experiment_time,</if>
            <if test="Vo.studentExperimentSubmit != null">student_experiment_submit,</if>
            <if test="Vo.creatorId != null">creator_id,</if>
             create_time,
            <if test="Vo.updaterId != null">updater_id,</if>
            <if test="Vo.updateTime != null">update_time,</if>
            <if test="Vo.classExperimentId != null">class_experiment_id,</if>
            <if test="Vo.statement != null">statement,</if>
           
		</trim>
		<trim prefix="Values (" suffix=")" suffixOverrides=",">
            <if test="Vo.subjectId != null">#{Vo.subjectId},</if>
            <if test="Vo.studentId != null">#{Vo.studentId},</if>
            <if test="Vo.studentExperimentContent != null">#{Vo.studentExperimentContent},</if>
            <if test="Vo.studentExperimentTime != null">#{Vo.studentExperimentTime},</if>
            <if test="Vo.studentExperimentSubmit != null">#{Vo.studentExperimentSubmit},</if>
            <if test="Vo.creatorId != null">#{Vo.creatorId},</if>
            now(),
            <if test="Vo.updaterId != null">#{Vo.updaterId},</if>
            <if test="Vo.updateTime != null">#{Vo.updateTime},</if>
            <if test="Vo.classExperimentId != null">#{Vo.classExperimentId},</if>
            <if test="Vo.statement != null">#{Vo.statement},</if>
            
		</trim>
	</insert>
    
    <!-- 根据主键删除-->
	<delete id="delete">
		Delete From tb_student_experiment
		Where id = #{id}
	</delete>
    
    <!-- 删除所有记录,返回受影响的行数 -->
	<delete id="deleteAll">
		Delete From tb_student_experiment
	</delete>
    
    <!-- 更新非空列,返回受影响的行数 -->
	<update id="updateSelective">
		Update tb_student_experiment
		<trim prefix="Set" suffixOverrides=",">
            <if test="Vo.subjectId != null">subject_id = #{Vo.subjectId},</if>
            <if test="Vo.studentId != null">student_id = #{Vo.studentId},</if>
            <if test="Vo.studentExperimentContent != null">student_experiment_content = #{Vo.studentExperimentContent},</if>
            <if test="Vo.studentExperimentTime != null">student_experiment_time = #{Vo.studentExperimentTime},</if>
            <if test="Vo.studentExperimentSubmit != null">student_experiment_submit = #{Vo.studentExperimentSubmit},</if>
            <if test="Vo.creatorId != null">creator_id = #{Vo.creatorId},</if>
            <if test="Vo.createTime != null">create_time = #{Vo.createTime},</if>
            <if test="Vo.updaterId != null">updater_id = #{Vo.updaterId},</if>
            <if test="Vo.updateTime != null">update_time = #{Vo.updateTime},</if>
            <if test="Vo.classExperimentId != null">class_experiment_id = #{Vo.classExperimentId},</if>
            <if test="Vo.statement != null">statement = #{Vo.statement},</if>
		</trim>
		Where tb_student_experiment.id = #{Vo.id}
	</update>
    
    <resultMap type="StudentExperimentVo" id="RM_Default">
        <id column="StudentExperiment_id" property="id"/>
        <result column="StudentExperiment_subjectId" property="subjectId"/>
        <result column="StudentExperiment_studentId" property="studentId"/>
        <result column="StudentExperiment_studentExperimentContent" property="studentExperimentContent"/>
        <result column="StudentExperiment_studentExperimentTime" property="studentExperimentTime"/>
        <result column="StudentExperiment_studentExperimentSubmit" property="studentExperimentSubmit"/>
        <result column="StudentExperiment_creatorId" property="creatorId"/>
        <result column="StudentExperiment_createTime" property="createTime"/>
        <result column="StudentExperiment_updaterId" property="updaterId"/>
        <result column="StudentExperiment_updateTime" property="updateTime"/>
        <result column="StudentExperiment_classExperimentId" property="classExperimentId"/>
        <result column="StudentExperiment_statement" property="statement"/>
	</resultMap>
    
     <!-- ResultMap -->
	<resultMap type="StudentExperimentVo" id="RM_getVo_Auto">
		<discriminator javaType="int" column="_chooseRM">
			<case value="0" resultMap="RM_Default" /><!-- Auto -->
		</discriminator>
	</resultMap>
    
    <!-- 根据主键查询一条记录,通过'__chooseRM'控制返回的列 -->
	<select id="getVo_Auto" resultMap="RM_getVo_Auto">
		Select
		<include refid="Sql_SelectColumns" />
		#{chooseRM} As _chooseRM
		From	tb_student_experiment	As	tb_student_experiment
		Where
		tb_student_experiment.id = #{id}
	</select>
    
    <!-- 传入id,判断是否存在该记录 -->
	<select id="isExist_Auto" resultType="boolean">
		Select Count(id) > 0
		From	tb_student_experiment	As	tb_student_experiment
		Where
		tb_student_experiment.id = #{id}
	</select>
    
    <!-- 查询记录数量 -->
	<select id="queryCount_Auto" resultType="Long">
		Select Count(tb_student_experiment.id)
		From	tb_student_experiment	As	tb_student_experiment
        <trim prefix="Where" prefixOverrides="And | Or">
			<include refid="Sql_Where"/>
		</trim>
	</select>
    
    <resultMap type="StudentExperimentVo" id="RM_queryVos_Auto">
        <discriminator javaType="int" column="_chooseRM">
			<case value="0" resultMap="RM_Default" /><!-- Auto -->
		</discriminator>
	</resultMap>
    
    <!-- 查询记录集合,通过'__chooseRM'控制返回的列 -->
	<select id="queryVos_Auto" resultMap="RM_queryVos_Auto">
		Select
		<include refid="Sql_SelectColumns"/>
		#{StudentExperimentSearch.chooseRM} As _chooseRM
		From	tb_student_experiment	As	tb_student_experiment
        <trim prefix="Where" prefixOverrides="And | Or">
			<include refid="Sql_Where"/>
		</trim>
		<include refid="Sql_Order"/>
		Limit #{StudentExperimentSearch.offset},#{StudentExperimentSearch.limit}
	</select>
    

    <resultMap type="StudentExperimentVo" id="RM_getVo_AdminView">
		<!-- <discriminator javaType="int" column="_chooseRM"> -->
        <id column="StudentExperiment_id" property="id"/>
        <result column="StudentExperiment_subjectId" property="subjectId"/>
        <result column="StudentExperiment_studentId" property="studentId"/>
        <result column="StudentExperiment_studentExperimentContent" property="studentExperimentContent"/>
        <result column="StudentExperiment_studentExperimentTime" property="studentExperimentTime"/>
        <result column="StudentExperiment_studentExperimentSubmit" property="studentExperimentSubmit"/>
        <result column="StudentExperiment_creatorId" property="creatorId"/>
        <result column="StudentExperiment_createTime" property="createTime"/>
        <result column="StudentExperiment_updaterId" property="updaterId"/>
        <result column="StudentExperiment_updateTime" property="updateTime"/>
        <result column="StudentExperiment_classExperimentId" property="classExperimentId"/>
        <result column="StudentExperiment_statement" property="statement"/>
		<!-- </discriminator> -->
	</resultMap>
    
    <!-- 根据主键查询一条记录,专供AdminView调用 -->
	<select id="getVo_AdminView" resultMap="RM_getVo_AdminView">
		Select
		<include refid="Sql_SelectColumns" />
		#{chooseRM} As _chooseRM
		From	tb_student_experiment	As	tb_student_experiment
		Where
		tb_student_experiment.id = #{id}
	</select>
    
    <resultMap type="StudentExperimentVo" id="RM_getVo_preAdminEdit">
		<!-- <discriminator javaType="int" column="_chooseRM"> -->
        <id column="StudentExperiment_id" property="id"/>
        <result column="StudentExperiment_subjectId" property="subjectId"/>
        <result column="StudentExperiment_studentId" property="studentId"/>
        <result column="StudentExperiment_studentExperimentContent" property="studentExperimentContent"/>
        <result column="StudentExperiment_studentExperimentTime" property="studentExperimentTime"/>
        <result column="StudentExperiment_studentExperimentSubmit" property="studentExperimentSubmit"/>
        <result column="StudentExperiment_creatorId" property="creatorId"/>
        <result column="StudentExperiment_createTime" property="createTime"/>
        <result column="StudentExperiment_updaterId" property="updaterId"/>
        <result column="StudentExperiment_updateTime" property="updateTime"/>
        <result column="StudentExperiment_classExperimentId" property="classExperimentId"/>
        <result column="StudentExperiment_statement" property="statement"/>
		<!-- </discriminator> -->
	</resultMap>
    
    <!-- 根据主键查询一条记录,专供preAdminEdit调用 -->
	<select id="getVo_preAdminEdit" resultMap="RM_getVo_preAdminEdit">
		Select
		<include refid="Sql_SelectColumns" />
		#{chooseRM} As _chooseRM
		From	tb_student_experiment	As	tb_student_experiment
		Where
		tb_student_experiment.id = #{id}
	</select>
    
    <resultMap type="StudentExperimentVo" id="RM_getVo_AdminEdit">
		<!-- <discriminator javaType="int" column="_chooseRM"> -->
        <id column="StudentExperiment_id" property="id"/>
        <result column="StudentExperiment_subjectId" property="subjectId"/>
        <result column="StudentExperiment_studentId" property="studentId"/>
        <result column="StudentExperiment_studentExperimentContent" property="studentExperimentContent"/>
        <result column="StudentExperiment_studentExperimentTime" property="studentExperimentTime"/>
        <result column="StudentExperiment_studentExperimentSubmit" property="studentExperimentSubmit"/>
        <result column="StudentExperiment_creatorId" property="creatorId"/>
        <result column="StudentExperiment_createTime" property="createTime"/>
        <result column="StudentExperiment_updaterId" property="updaterId"/>
        <result column="StudentExperiment_updateTime" property="updateTime"/>
        <result column="StudentExperiment_classExperimentId" property="classExperimentId"/>
        <result column="StudentExperiment_statement" property="statement"/>
		<!-- </discriminator> -->
	</resultMap>
    
    <!-- 根据主键查询一条记录,专供AdminEdit调用 -->
	<select id="getVo_AdminEdit" resultMap="RM_getVo_AdminEdit">
		Select
		<include refid="Sql_SelectColumns" />
		#{chooseRM} As _chooseRM
		From	tb_student_experiment	As	tb_student_experiment
		Where
		tb_student_experiment.id = #{id}
	</select>
    
    <resultMap type="StudentExperimentVo" id="RM_queryVos_AdminList">
		<!-- <discriminator javaType="int" column="_chooseRM"> -->
        <id column="StudentExperiment_id" property="id"/>
        <result column="StudentExperiment_subjectId" property="subjectId"/>
        <result column="StudentExperiment_studentId" property="studentId"/>
        <result column="StudentExperiment_studentExperimentContent" property="studentExperimentContent"/>
        <result column="StudentExperiment_studentExperimentTime" property="studentExperimentTime"/>
        <result column="StudentExperiment_studentExperimentSubmit" property="studentExperimentSubmit"/>
        <result column="StudentExperiment_creatorId" property="creatorId"/>
        <result column="StudentExperiment_createTime" property="createTime"/>
        <result column="StudentExperiment_updaterId" property="updaterId"/>
        <result column="StudentExperiment_updateTime" property="updateTime"/>
        <result column="StudentExperiment_classExperimentId" property="classExperimentId"/>
        <result column="StudentExperiment_statement" property="statement"/>
		<!-- </discriminator> -->
	</resultMap>
    
    <sql id="Sql_SelectColumns">
        tb_student_experiment.id As StudentExperiment_id,
        tb_student_experiment.subject_id As StudentExperiment_subjectId,
        tb_student_experiment.student_id As StudentExperiment_studentId,
        tb_student_experiment.student_experiment_content As StudentExperiment_studentExperimentContent,
        tb_student_experiment.student_experiment_time As StudentExperiment_studentExperimentTime,
        tb_student_experiment.student_experiment_submit As StudentExperiment_studentExperimentSubmit,
        tb_student_experiment.creator_id As StudentExperiment_creatorId,
        tb_student_experiment.create_time As StudentExperiment_createTime,
        tb_student_experiment.updater_id As StudentExperiment_updaterId,
        tb_student_experiment.update_time As StudentExperiment_updateTime,
        tb_student_experiment.class_experiment_id As StudentExperiment_classExperimentId,
        tb_student_experiment.statement As StudentExperiment_statement,
	</sql>
    
    <sql id="Sql_Order">
		<trim prefix="Order By ">
    		<choose>
                <when test="StudentExperimentSearch.sort != null">
                    StudentExperiment_${StudentExperimentSearch.sort} 
                    <if test="StudentExperimentSearch.order != null">
                        ${StudentExperimentSearch.order}
                    </if>
                </when>
                <otherwise>
                    StudentExperiment_id Desc
                </otherwise>
            </choose>
		</trim>
	</sql>
    
    <sql id="Sql_Where">
        <if test="StudentExperimentSearch.eqId != null">
			<![CDATA[ And tb_student_experiment.id = #{StudentExperimentSearch.eqId} ]]>
		</if>
		<if test="StudentExperimentSearch.neId != null">
			<![CDATA[ And tb_student_experiment.id != #{StudentExperimentSearch.neId} ]]>
		</if>
        <if test="StudentExperimentSearch.eqSubjectId != null">
			<![CDATA[ And tb_student_experiment.subject_id = #{StudentExperimentSearch.eqSubjectId} ]]>
		</if>
		<if test="StudentExperimentSearch.neSubjectId != null">
			<![CDATA[ And tb_student_experiment.subject_id != #{StudentExperimentSearch.neSubjectId} ]]>
		</if>
        <if test="StudentExperimentSearch.eqStudentId != null">
			<![CDATA[ And tb_student_experiment.student_id = #{StudentExperimentSearch.eqStudentId} ]]>
		</if>
		<if test="StudentExperimentSearch.neStudentId != null">
			<![CDATA[ And tb_student_experiment.student_id != #{StudentExperimentSearch.neStudentId} ]]>
		</if>
        <if test="StudentExperimentSearch.eqStudentExperimentContent != null">
			<![CDATA[ And tb_student_experiment.student_experiment_content = #{StudentExperimentSearch.eqStudentExperimentContent} ]]>
		</if>
		<if test="StudentExperimentSearch.lkStudentExperimentContent != null">
			<![CDATA[ And tb_student_experiment.student_experiment_content Like '%${StudentExperimentSearch.lkStudentExperimentContent}%' ]]>
		</if>
        <if test="StudentExperimentSearch.eqStudentExperimentTime != null">
			<![CDATA[ And date_format(tb_student_experiment.student_experiment_time,'%Y-%m-%d') = date_format(#{StudentExperimentSearch.eqStudentExperimentTime},'%Y-%m-%d') ]]>
		</if>
		<if test="StudentExperimentSearch.geStudentExperimentTime != null">
			<![CDATA[ And tb_student_experiment.student_experiment_time >= #{StudentExperimentSearch.geStudentExperimentTime} ]]>
		</if>
		<if test="StudentExperimentSearch.ltStudentExperimentTime != null">
			<![CDATA[ And tb_student_experiment.student_experiment_time < #{StudentExperimentSearch.ltStudentExperimentTime} ]]>
		</if>
        
        <if test="StudentExperimentSearch.eqStudentExperimentSubmit != null">
			<![CDATA[ And tb_student_experiment.student_experiment_submit = #{StudentExperimentSearch.eqStudentExperimentSubmit} ]]>
		</if>
		<if test="StudentExperimentSearch.lkStudentExperimentSubmit != null">
			<![CDATA[ And tb_student_experiment.student_experiment_submit Like '%${StudentExperimentSearch.lkStudentExperimentSubmit}%' ]]>
		</if>
        <if test="StudentExperimentSearch.eqCreatorId != null">
			<![CDATA[ And tb_student_experiment.creator_id = #{StudentExperimentSearch.eqCreatorId} ]]>
		</if>
		<if test="StudentExperimentSearch.neCreatorId != null">
			<![CDATA[ And tb_student_experiment.creator_id != #{StudentExperimentSearch.neCreatorId} ]]>
		</if>
        <if test="StudentExperimentSearch.eqCreateTime != null">
			<![CDATA[ And date_format(tb_student_experiment.create_time,'%Y-%m-%d') = date_format(#{StudentExperimentSearch.eqCreateTime},'%Y-%m-%d') ]]>
		</if>
		<if test="StudentExperimentSearch.geCreateTime != null">
			<![CDATA[ And tb_student_experiment.create_time >= #{StudentExperimentSearch.geCreateTime} ]]>
		</if>
		<if test="StudentExperimentSearch.ltCreateTime != null">
			<![CDATA[ And tb_student_experiment.create_time < #{StudentExperimentSearch.ltCreateTime} ]]>
		</if>
        
        <if test="StudentExperimentSearch.eqUpdaterId != null">
			<![CDATA[ And tb_student_experiment.updater_id = #{StudentExperimentSearch.eqUpdaterId} ]]>
		</if>
		<if test="StudentExperimentSearch.neUpdaterId != null">
			<![CDATA[ And tb_student_experiment.updater_id != #{StudentExperimentSearch.neUpdaterId} ]]>
		</if>
        <if test="StudentExperimentSearch.eqUpdateTime != null">
			<![CDATA[ And date_format(tb_student_experiment.update_time,'%Y-%m-%d') = date_format(#{StudentExperimentSearch.eqUpdateTime},'%Y-%m-%d') ]]>
		</if>
		<if test="StudentExperimentSearch.geUpdateTime != null">
			<![CDATA[ And tb_student_experiment.update_time >= #{StudentExperimentSearch.geUpdateTime} ]]>
		</if>
		<if test="StudentExperimentSearch.ltUpdateTime != null">
			<![CDATA[ And tb_student_experiment.update_time < #{StudentExperimentSearch.ltUpdateTime} ]]>
		</if>
        
        <if test="StudentExperimentSearch.eqClassExperimentId != null">
			<![CDATA[ And tb_student_experiment.class_experiment_id = #{StudentExperimentSearch.eqClassExperimentId} ]]>
		</if>
		<if test="StudentExperimentSearch.neClassExperimentId != null">
			<![CDATA[ And tb_student_experiment.class_experiment_id != #{StudentExperimentSearch.neClassExperimentId} ]]>
		</if>
        <if test="StudentExperimentSearch.eqStatement != null">
			<![CDATA[ And tb_student_experiment.statement = #{StudentExperimentSearch.eqStatement} ]]>
		</if>
		<if test="StudentExperimentSearch.lkStatement != null">
			<![CDATA[ And tb_student_experiment.statement Like '%${StudentExperimentSearch.lkStatement}%' ]]>
		</if>
    </sql>
</mapper>


