<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hfxt.cmp.mapper.IRoleDao">
<!-- 新增的方法写在这里 -->


<!-- 保存非空列,返回受影响的行数 -->
	<insert id="saveSelective" useGeneratedKeys="true" keyProperty="Vo.id">
		Insert Into tb_role 
		<trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="Vo.roleName != null">role_name,</if>
            <if test="Vo.desc != null">desc,</if>
            <if test="Vo.creatorId != null">creator_id,</if>
             create_time,
            <if test="Vo.updaterId != null">updater_id,</if>
            <if test="Vo.updateTime != null">update_time,</if>
            <if test="Vo.roleCode != null">role_code,</if>
           
		</trim>
		<trim prefix="Values (" suffix=")" suffixOverrides=",">
            <if test="Vo.roleName != null">#{Vo.roleName},</if>
            <if test="Vo.desc != null">#{Vo.desc},</if>
            <if test="Vo.creatorId != null">#{Vo.creatorId},</if>
            now(),
            <if test="Vo.updaterId != null">#{Vo.updaterId},</if>
            <if test="Vo.updateTime != null">#{Vo.updateTime},</if>
            <if test="Vo.roleCode != null">#{Vo.roleCode},</if>
            
		</trim>
	</insert>
    
    <!-- 根据主键删除-->
	<delete id="delete">
		Delete From tb_role
		Where id = #{id}
	</delete>
    
    <!-- 删除所有记录,返回受影响的行数 -->
	<delete id="deleteAll">
		Delete From tb_role
	</delete>
    
    <!-- 更新非空列,返回受影响的行数 -->
	<update id="updateSelective">
		Update tb_role
		<trim prefix="Set" suffixOverrides=",">
            <if test="Vo.roleName != null">role_name = #{Vo.roleName},</if>
            <if test="Vo.desc != null">desc = #{Vo.desc},</if>
            <if test="Vo.creatorId != null">creator_id = #{Vo.creatorId},</if>
            <if test="Vo.createTime != null">create_time = #{Vo.createTime},</if>
            <if test="Vo.updaterId != null">updater_id = #{Vo.updaterId},</if>
            <if test="Vo.updateTime != null">update_time = #{Vo.updateTime},</if>
            <if test="Vo.roleCode != null">role_code = #{Vo.roleCode},</if>
		</trim>
		Where tb_role.id = #{Vo.id}
	</update>
    
    <resultMap type="RoleVo" id="RM_Default">
        <id column="Role_id" property="id"/>
        <result column="Role_roleName" property="roleName"/>
        <result column="Role_desc" property="desc"/>
        <result column="Role_creatorId" property="creatorId"/>
        <result column="Role_createTime" property="createTime"/>
        <result column="Role_updaterId" property="updaterId"/>
        <result column="Role_updateTime" property="updateTime"/>
        <result column="Role_roleCode" property="roleCode"/>
	</resultMap>
    
     <!-- ResultMap -->
	<resultMap type="RoleVo" id="RM_getVo_Auto">
		<discriminator javaType="int" column="_chooseRM">
			<case value="0" resultMap="RM_Default" /><!-- Auto -->
		</discriminator>
	</resultMap>
    
    <!-- 根据主键查询一条记录,通过'__chooseRM'控制返回的列 -->
	<select id="getVo_Auto" resultMap="RM_getVo_Auto">
		Select
		<include refid="Sql_SelectColumns" />
		#{chooseRM} As _chooseRM
		From	tb_role	As	tb_role
		Where
		tb_role.id = #{id}
	</select>
    
    <!-- 传入id,判断是否存在该记录 -->
	<select id="isExist_Auto" resultType="boolean">
		Select Count(id) > 0
		From	tb_role	As	tb_role
		Where
		tb_role.id = #{id}
	</select>
    
    <!-- 查询记录数量 -->
	<select id="queryCount_Auto" resultType="Long">
		Select Count(tb_role.id)
		From	tb_role	As	tb_role
        <trim prefix="Where" prefixOverrides="And | Or">
			<include refid="Sql_Where"/>
		</trim>
	</select>
    
    <resultMap type="RoleVo" id="RM_queryVos_Auto">
        <discriminator javaType="int" column="_chooseRM">
			<case value="0" resultMap="RM_Default" /><!-- Auto -->
		</discriminator>
	</resultMap>
    
    <!-- 查询记录集合,通过'__chooseRM'控制返回的列 -->
	<select id="queryVos_Auto" resultMap="RM_queryVos_Auto">
		Select
		<include refid="Sql_SelectColumns"/>
		#{RoleSearch.chooseRM} As _chooseRM
		From	tb_role	As	tb_role
        <trim prefix="Where" prefixOverrides="And | Or">
			<include refid="Sql_Where"/>
		</trim>
		<include refid="Sql_Order"/>
		Limit #{RoleSearch.offset},#{RoleSearch.limit}
	</select>
    

    <resultMap type="RoleVo" id="RM_getVo_AdminView">
		<!-- <discriminator javaType="int" column="_chooseRM"> -->
        <id column="Role_id" property="id"/>
        <result column="Role_roleName" property="roleName"/>
        <result column="Role_desc" property="desc"/>
        <result column="Role_creatorId" property="creatorId"/>
        <result column="Role_createTime" property="createTime"/>
        <result column="Role_updaterId" property="updaterId"/>
        <result column="Role_updateTime" property="updateTime"/>
        <result column="Role_roleCode" property="roleCode"/>
		<!-- </discriminator> -->
	</resultMap>
    
    <!-- 根据主键查询一条记录,专供AdminView调用 -->
	<select id="getVo_AdminView" resultMap="RM_getVo_AdminView">
		Select
		<include refid="Sql_SelectColumns" />
		#{chooseRM} As _chooseRM
		From	tb_role	As	tb_role
		Where
		tb_role.id = #{id}
	</select>
    
    <resultMap type="RoleVo" id="RM_getVo_preAdminEdit">
		<!-- <discriminator javaType="int" column="_chooseRM"> -->
        <id column="Role_id" property="id"/>
        <result column="Role_roleName" property="roleName"/>
        <result column="Role_desc" property="desc"/>
        <result column="Role_creatorId" property="creatorId"/>
        <result column="Role_createTime" property="createTime"/>
        <result column="Role_updaterId" property="updaterId"/>
        <result column="Role_updateTime" property="updateTime"/>
        <result column="Role_roleCode" property="roleCode"/>
		<!-- </discriminator> -->
	</resultMap>
    
    <!-- 根据主键查询一条记录,专供preAdminEdit调用 -->
	<select id="getVo_preAdminEdit" resultMap="RM_getVo_preAdminEdit">
		Select
		<include refid="Sql_SelectColumns" />
		#{chooseRM} As _chooseRM
		From	tb_role	As	tb_role
		Where
		tb_role.id = #{id}
	</select>
    
    <resultMap type="RoleVo" id="RM_getVo_AdminEdit">
		<!-- <discriminator javaType="int" column="_chooseRM"> -->
        <id column="Role_id" property="id"/>
        <result column="Role_roleName" property="roleName"/>
        <result column="Role_desc" property="desc"/>
        <result column="Role_creatorId" property="creatorId"/>
        <result column="Role_createTime" property="createTime"/>
        <result column="Role_updaterId" property="updaterId"/>
        <result column="Role_updateTime" property="updateTime"/>
        <result column="Role_roleCode" property="roleCode"/>
		<!-- </discriminator> -->
	</resultMap>
    
    <!-- 根据主键查询一条记录,专供AdminEdit调用 -->
	<select id="getVo_AdminEdit" resultMap="RM_getVo_AdminEdit">
		Select
		<include refid="Sql_SelectColumns" />
		#{chooseRM} As _chooseRM
		From	tb_role	As	tb_role
		Where
		tb_role.id = #{id}
	</select>
    
    <resultMap type="RoleVo" id="RM_queryVos_AdminList">
		<!-- <discriminator javaType="int" column="_chooseRM"> -->
        <id column="Role_id" property="id"/>
        <result column="Role_roleName" property="roleName"/>
        <result column="Role_desc" property="desc"/>
        <result column="Role_creatorId" property="creatorId"/>
        <result column="Role_createTime" property="createTime"/>
        <result column="Role_updaterId" property="updaterId"/>
        <result column="Role_updateTime" property="updateTime"/>
        <result column="Role_roleCode" property="roleCode"/>
		<!-- </discriminator> -->
	</resultMap>
    
    <sql id="Sql_SelectColumns">
        tb_role.id As Role_id,
        tb_role.role_name As Role_roleName,
        tb_role.desc As Role_desc,
        tb_role.creator_id As Role_creatorId,
        tb_role.create_time As Role_createTime,
        tb_role.updater_id As Role_updaterId,
        tb_role.update_time As Role_updateTime,
        tb_role.role_code As Role_roleCode,
	</sql>
    
    <sql id="Sql_Order">
		<trim prefix="Order By ">
    		<choose>
                <when test="RoleSearch.sort != null">
                    Role_${RoleSearch.sort} 
                    <if test="RoleSearch.order != null">
                        ${RoleSearch.order}
                    </if>
                </when>
                <otherwise>
                    Role_id Desc
                </otherwise>
            </choose>
		</trim>
	</sql>
    
    <sql id="Sql_Where">
        <if test="RoleSearch.eqId != null">
			<![CDATA[ And tb_role.id = #{RoleSearch.eqId} ]]>
		</if>
		<if test="RoleSearch.neId != null">
			<![CDATA[ And tb_role.id != #{RoleSearch.neId} ]]>
		</if>
        <if test="RoleSearch.eqRoleName != null">
			<![CDATA[ And tb_role.role_name = #{RoleSearch.eqRoleName} ]]>
		</if>
		<if test="RoleSearch.lkRoleName != null">
			<![CDATA[ And tb_role.role_name Like '%${RoleSearch.lkRoleName}%' ]]>
		</if>
        <if test="RoleSearch.eqDesc != null">
			<![CDATA[ And tb_role.desc = #{RoleSearch.eqDesc} ]]>
		</if>
		<if test="RoleSearch.lkDesc != null">
			<![CDATA[ And tb_role.desc Like '%${RoleSearch.lkDesc}%' ]]>
		</if>
        <if test="RoleSearch.eqCreatorId != null">
			<![CDATA[ And tb_role.creator_id = #{RoleSearch.eqCreatorId} ]]>
		</if>
		<if test="RoleSearch.neCreatorId != null">
			<![CDATA[ And tb_role.creator_id != #{RoleSearch.neCreatorId} ]]>
		</if>
        <if test="RoleSearch.eqCreateTime != null">
			<![CDATA[ And date_format(tb_role.create_time,'%Y-%m-%d') = date_format(#{RoleSearch.eqCreateTime},'%Y-%m-%d') ]]>
		</if>
		<if test="RoleSearch.geCreateTime != null">
			<![CDATA[ And tb_role.create_time >= #{RoleSearch.geCreateTime} ]]>
		</if>
		<if test="RoleSearch.ltCreateTime != null">
			<![CDATA[ And tb_role.create_time < #{RoleSearch.ltCreateTime} ]]>
		</if>
        
        <if test="RoleSearch.eqUpdaterId != null">
			<![CDATA[ And tb_role.updater_id = #{RoleSearch.eqUpdaterId} ]]>
		</if>
		<if test="RoleSearch.neUpdaterId != null">
			<![CDATA[ And tb_role.updater_id != #{RoleSearch.neUpdaterId} ]]>
		</if>
        <if test="RoleSearch.eqUpdateTime != null">
			<![CDATA[ And date_format(tb_role.update_time,'%Y-%m-%d') = date_format(#{RoleSearch.eqUpdateTime},'%Y-%m-%d') ]]>
		</if>
		<if test="RoleSearch.geUpdateTime != null">
			<![CDATA[ And tb_role.update_time >= #{RoleSearch.geUpdateTime} ]]>
		</if>
		<if test="RoleSearch.ltUpdateTime != null">
			<![CDATA[ And tb_role.update_time < #{RoleSearch.ltUpdateTime} ]]>
		</if>
        
        <if test="RoleSearch.eqRoleCode != null">
			<![CDATA[ And tb_role.role_code = #{RoleSearch.eqRoleCode} ]]>
		</if>
		<if test="RoleSearch.lkRoleCode != null">
			<![CDATA[ And tb_role.role_code Like '%${RoleSearch.lkRoleCode}%' ]]>
		</if>
    </sql>
</mapper>


